/// <reference types="react" />
export declare type FileValue = {
    fileId: string;
    filename: string;
    id?: string;
    downloadUrl?: string;
    mimetype?: string;
};
export declare type FileInputValue = FileValue | FileValue[];
export declare type OriginalFileInputValue = File | File[];
export declare type FileInputProps = {
    onChange?: (value: FileInputValue, originalFile: OriginalFileInputValue) => void;
    children: (args: {
        pick: (options: {}) => Promise<void>;
        value: FileInputValue | null;
        originalFile: OriginalFileInputValue | null;
        error: object | null;
    }) => React.ReactNode;
    public?: boolean;
    maxFiles?: number;
    sessionCache?: boolean;
    onUploadDone?: (value: FileInputValue, originalFile?: OriginalFileInputValue) => Promise<FileInputValue>;
    value?: FileInputValue | null;
};
export declare type FileInputState = {
    path: string | null;
    error: object | null;
    value: FileInputValue | null;
    originalFile: OriginalFileInputValue | null;
};
//# sourceMappingURL=types.d.ts.map