{"version":3,"sources":["images/caret_up.svg","images/caret_down.svg","images/final_logo_white.svg","images/our_process.png","images/our_process_icons.svg","images/fcs.svg","images/childimpact.svg","images/helpinghands.svg","images/map.png","components/Footer.js","components/Header.js","components/Home.js","components/About.js","components/Contact.js","tabs/Tab.js","tabs/Tabs.js","components/quiz/Answer.js","components/quiz/Quiz.js","components/Demo.js","components/Units.js","courses/Unit1/Unit1Lesson1.js","components/quizComponents/questions.js","components/quizComponents/Question.js","components/quizComponents/QuestionCount.js","components/quizComponents/AnswerOption.js","components/quizComponents/AnswerButton.js","components/quizComponents/Quiz.js","components/quizComponents/Result.js","components/QuizTemplate.js","courses/Unit1/Unit1Lesson2.js","courses/Unit2/Unit2Lesson1.js","courses/Unit2/Unit2Lesson2.js","courses/Unit2/Unit2Lesson3.js","courses/Unit2/Unit2Lesson4.js","courses/Unit2/Unit2Lesson5.js","courses/Unit2/Unit2Lesson6.js","courses/Unit2/Unit2Lesson7.js","courses/Unit2/Unit2Lesson8.js","courses/Unit2/Unit2Lesson9.js","courses/Unit2/Unit2Lesson10.js","courses/Unit2/Unit2Lesson11.js","courses/Unit2/Unit2Lesson12.js","courses/Unit3/Unit3Lesson1.js","courses/Unit3/Unit3Lesson2.js","courses/Unit4/Unit4Lesson1.js","courses/Unit4/Unit4Lesson2.js","courses/Unit4/Unit4Lesson3.js","courses/Unit4/Unit4Lesson4.js","courses/Unit4/Unit4Lesson5.js","courses/Unit5/Unit5Lesson1.js","courses/Unit5/Unit5Lesson2.js","courses/Unit5/Unit5Lesson3.js","courses/Unit5/Unit5Lesson4.js","courses/Unit5/Unit5Lesson5.js","courses/Unit5/Unit5Lesson6.js","courses/Unit5/Unit5Lesson7.js","courses/Unit5/Unit5Lesson8.js","courses/Unit5/Unit5Lesson9.js","courses/Unit6/Unit6Lesson1.js","courses/Unit6/Unit6Lesson2.js","courses/Unit6/Unit6Lesson3.js","courses/Unit6/Unit6Lesson4.js","courses/Unit6/Unit6Lesson5.js","courses/Unit7/Unit7Lesson1.js","courses/Unit7/Unit7Lesson2.js","courses/Unit7/Unit7Lesson3.js","courses/Unit8/Unit8Lesson1.js","courses/Unit8/Unit8Lesson2.js","courses/Unit8/Unit8Lesson3.js","courses/Unit8/Unit8Lesson4.js","courses/Unit8/Unit8Lesson5.js","courses/Unit8/Unit8Lesson6.js","courses/Unit8/Unit8Lesson7.js","courses/Unit8/Unit8Lesson8.js","courses/Unit9/Unit9Lesson1.js","courses/Unit10/Unit10Lesson1.js","courses/Unit11/Unit11Lesson1.js","courses/Unit11/Unit11Lesson2.js","courses/Unit11/Unit11Lesson3.js","courses/Unit11/Unit11Lesson4.js","courses/Unit11/Unit11Lesson5.js","courses/Unit12/Unit12Lesson1.js","courses/Unit12/Unit12Lesson2.js","courses/Unit13/Unit13Lesson1.js","courses/Unit13/Unit13Lesson2.js","courses/Unit14/Unit14Lesson1.js","courses/Unit14/Unit14Lesson2.js","courses/Unit14/Unit14Lesson3.js","courses/Unit14/Unit14Lesson4.js","courses/Unit14/Unit14Lesson5.js","courses/Unit15/Unit15Lesson1.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","class","to","src","logo","alt","React","Component","MenuButton","id","onMouseUp","this","props","handleMouseDown","Menu","visibility","menuVisibility","className","Header","context","state","visible","bind","toggleMenu","e","console","log","stopPropagation","setState","Home","params","left","our_process","our_process_icons","href","helpinghands","childimpact","fcs","map","About","Contact","method","netlify-honeypot","data-netlify","name","type","value","placeholder","required","rows","Tab","onClick","label","activeTab","Tabs","onClickTabItem","tab","children","child","key","Answer","Answers","answer","rightAnswer","answered","selectedOption","onOptionClicked","isCorrect","option","ans","index","disabled","Quiz","dataQuestion","setStatefunction","quizdata","data","question","FindAnswer","Demo","title","frameborder","allow","allowfullscreen","height","width","scrolling","allowtransparency","sandbox","bottom","Units","displayMenu1","displayMenu2","displayMenu3","displayMenu4","displayMenu5","displayMenu6","displayMenu7","displayMenu8","displayMenu9","displayMenu10","displayMenu11","displayMenu12","displayMenu13","displayMenu14","displayMenu15","showMenu1","showMenu2","showMenu3","showMenu4","showMenu5","showMenu6","showMenu7","showMenu8","showMenu9","showMenu10","showMenu11","showMenu12","showMenu13","showMenu14","showMenu15","closeMenu1","closeMenu2","closeMenu3","closeMenu4","closeMenu5","closeMenu6","closeMenu7","closeMenu8","closeMenu9","closeMenu10","closeMenu11","closeMenu12","closeMenu13","closeMenu14","closeMenu15","event","preventDefault","document","addEventListener","removeEventListener","top","data-sal","data-sal-delay","data-sal-duration","CaretDown","CaretUp","Unit1Lesson1","quizQuestions","answerindex","answers","content","Question","QuestionCount","counter","total","AnswerOption","for","answerContent","AnswerButton","display","toggleHandler","currentStatus","component","transitionName","transitionEnterTimoeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","questionId","questionTotal","answerOptions","answerType","selectedAnswer","onAnswerSelected","setPreviousQuestion","setNextQuestion","Result","quizResult","_data","renderQuestins","QuizTemplate","allQuestions","selectedAnswers","result","answersCount","correct","incorrect","wrong","handleAnswerSelected","viewresults","obj","parseInt","target","answersCountKeys","Object","keys","answersCountValues","maxAnswerCount","Math","max","apply","filter","length","renderResult","renderQuiz","Unit1Lesson2","right","Unit2Lesson1","Unit2Lesson2","Unit2Lesson3","Unit2Lesson4","Unit2Lesson5","Unit2Lesson6","Unit2Lesson7","Unit2Lesson8","Unit2Lesson9","Unit2Lesson10","Unit2Lesson11","Unit2Lesson12","Unit3Lesson1","Unit3Lesson2","Unit4Lesson1","Unit4Lesson2","Unit4Lesson3","Unit4Lesson4","Unit4Lesson5","Unit5Lesson1","Unit5Lesson2","Unit5Lesson3","Unit5Lesson4","Unit5Lesson5","Unit5Lesson6","Unit5Lesson7","Unit5Lesson8","Unit5Lesson9","Unit6Lesson1","Unit6Lesson2","Unit6Lesson3","Unit6Lesson4","Unit6Lesson5","Unit7Lesson1","Unit7Lesson2","Unit7Lesson3","Unit8Lesson1","Unit8Lesson2","Unit8Lesson3","Unit8Lesson4","Unit8Lesson5","Unit8Lesson6","Unit8Lesson7","Unit8Lesson8","Unit9Lesson1","Unit10Lesson1","Unit11Lesson1","Unit11Lesson2","Unit11Lesson3","Unit11Lesson4","Unit11Lesson5","Unit12Lesson1","Unit12Lesson2","Unit13Lesson1","Unit13Lesson2","Unit14Lesson1","Unit14Lesson2","Unit14Lesson3","Unit14Lesson4","Unit14Lesson5","Unit15Lesson1","routes","path","exact","main","WebPage","route","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACPE,KAAM,kBAAM,kBAAC,GAAD,QAEb,CAAEF,KAAM,gBACPE,KAAM,kBAAM,kBAAC,GAAD,QAEb,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,gBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,QAEd,CAAEF,KAAM,iBACNE,KAAM,kBAAM,kBAAC,GAAD,SA2BDC,G,uKArBP,OACE,kBAAC,IAAD,KACE,yBAAKhR,MAAM,QAEN4Q,GAAOvO,KAAI,SAAC4O,GAAD,OACR,kBAAC,IAAD,CACAvN,IAAKuN,EAAMJ,KACXA,KAAMI,EAAMJ,KACZC,MAAOG,EAAMH,MACb5G,UAAW+G,EAAMF,UAIrB,kBAAC,EAAD,Y,GAfM1Q,IAAMC,WC5Rb4Q,OARf,WACE,OACE,yBAAKlQ,UAAU,OACb,kBAAC,GAAD,QCKcmQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFjJ,SAASkJ,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3Q,QAAQ2Q,MAAMA,EAAMC,c","file":"static/js/main.6bf4af5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/caret_up.c78b3fdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/caret_down.a19124d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/final_logo_white.8266ea43.svg\";","module.exports = __webpack_public_path__ + \"static/media/our_process.1f15d77c.png\";","module.exports = __webpack_public_path__ + \"static/media/our_process_icons.3692dbec.svg\";","module.exports = __webpack_public_path__ + \"static/media/fcs.716a8a9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/childimpact.09a28ef8.svg\";","module.exports = __webpack_public_path__ + \"static/media/helpinghands.3e1c5407.svg\";","module.exports = __webpack_public_path__ + \"static/media/map.bdd2b13e.png\";","import React from 'react';\nimport './styles/Footer.css';\nimport {Link} from 'react-router-dom';\nimport logo from '../images/final_logo_white.svg';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div class =\"footer\">\n                <div class = \"footer-grid\">\n                    <div class = \"footer-item footer_paragraph\">\n                        <h4>Summary</h4>\n                        <p>Many thanks for exploring our program. We wish you the best in your endeavors and hope to inspire you to pursue an education in the sciences, as STEM is the fulcrum for future progress.</p>\n                    </div>\n                    <div class = \"footer-item\">\n                        <h4>More About Us</h4>\n                        <p><Link to=\"/\">Home</Link></p>\n                        <p><Link to=\"/About\">About</Link></p>\n                        <p><Link to=\"/Contact\">Contact</Link></p>\n                    </div>\n                    <div class = \"footer-item\">\n                        <h4>Education</h4>\n                        <p><Link to=\"/Demo\">Demo</Link></p>\n                        <p><Link to=\"/Units\">Units</Link></p>\n                    </div>\n                </div>\n                <div class=\"footer-contact\">\n                    <div class = \"email\">Please contact us at SursumEducation@gmail.com</div>\n                    <div class = \"sursum\">® <img src={logo} alt=\"Sursum\"/></div>\n                </div>\n            </div>\n        )\n      }\n}\n\nexport default Footer;","import React from 'react';\nimport './styles/Header.css';\nimport logo from '../images/final_logo_white.svg';\nimport {Link} from 'react-router-dom';\n\nclass MenuButton extends React.Component {\n    render() {\n      return (\n        <button id=\"roundButton\" onMouseUp={this.props.handleMouseDown}></button>\n      );\n    }\n}\n\nclass Menu extends React.Component {\n    render() {\n      var visibility = \"hide\";\n   \n      if (this.props.menuVisibility) {\n        visibility = \"show\";\n      }\n   \n      return (\n        <div id=\"flyoutMenu\" onMouseUp={this.props.handleMouseDown} className={visibility}>\n            <div class='menu-links'>\n                <div><Link class=\"line\" to=\"/\">Home</Link></div>\n                <div><Link class=\"line\" to=\"/About\">About</Link></div>\n                <div><Link class=\"line\" to=\"/Contact\">Contact</Link></div>\n                <div><Link class=\"line\" to=\"/Demo\">Demo</Link></div>\n                <div><Link class=\"line\" to=\"/Units\">Units</Link></div>\n            </div>\n        </div>\n      );\n    }\n}\n\nclass Header extends React.Component {\n    \n    constructor(props, context) {\n        super(props, context);\n        \n        this.state = {\n            visible: false\n        };\n    \n        this.handleMouseDown = this.handleMouseDown.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n    }\n    \n    handleMouseDown(e) {\n        this.toggleMenu();\n        \n        console.log(\"clicked\");\n        e.stopPropagation();\n    }\n    \n    toggleMenu() {\n        this.setState(\n            {\n            visible: !this.state.visible\n            }\n        );\n    }\n    \n    render() {\n        return (\n            <div class=\"navbar\">\n                \n                <div class = \"navbar_left\">\n                    <Link class=\"line\" to=\"/\"><img class = \"title\" src = {logo} alt=\"logo\"/></Link>\n                </div>\n\n                <div class = \"navbar_right\">\n                    <div class = \"normal_links\">\n                        <Link class = \"navbar_right_links line\" to=\"/\">Home</Link>\n                        <Link class = \"navbar_right_links line\" to=\"/About\">About</Link>\n                        <Link class = \"navbar_right_links line\" to=\"/Contact\">Contact</Link>\n                        <Link class = \"navbar_right_links line\" to=\"/Demo\">Demo</Link>\n                        <Link class = \"navbar_right_links line\" to=\"/Units\">Units</Link>\n                    </div>\n                        \n                    <div class = \"dropdown\">\n                        <MenuButton handleMouseDown={this.handleMouseDown}/>\n                        <Menu handleMouseDown={this.handleMouseDown} menuVisibility={this.state.visible}/>\n                    </div>\n                </div>\n                \n            </div>\n        )\n      }\n}\n\nexport default Header;","import React from 'react';\nimport './styles/Home.css';\nimport Header from './Header.js';\nimport Particles from 'react-particles-js';\nimport FadeIn from 'react-fade-in';\nimport Fade from 'react-reveal/Fade';\nimport Slide from 'react-reveal/Slide';\nimport our_process from '../images/our_process.png';\nimport our_process_icons from '../images/our_process_icons.svg';\nimport fcs from '../images/fcs.svg';\nimport childimpact from '../images/childimpact.svg';\nimport helpinghands from '../images/helpinghands.svg';\nimport map from '../images/map.png';\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n           \n            <div class=\"navbar\">\n                <Header/>\n            </div>\n\n            <div class = \"component\">\n\n                <div class = \"homescreen\">\n                    <div class = \"homescreen_content\">\n                        <FadeIn>\n                            <h1>Sursum</h1>\n                            <hr/>\n                            <h3>Education</h3>\n                        </FadeIn>\n                    </div>\n                    <div class = \"particles\">\n                        <Particles\n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                    </div>\n                </div>\n\n                <div class = \"home_section\">\n                    <div class = \"home_section_header\"><Slide left><div><h3>How it works</h3></div></Slide></div>\n                    <Fade><div>\n                    <div class = \"home_trigrid\">\n                        <div class = \"home_item\">\n                            <h1 class = \"Unit_number\">01</h1>\n                            <h2>Videos</h2>\n                            <p>Clear, concise, and easy to understand video tutorials covering a wide range of subjects and concepts through step-by-step instruction.</p>\n                        </div>\n                        <div class = \"home_item\">\n                            <h1 class = \"Unit_number\">02</h1>\n                            <h2>Supplementals</h2>\n                            <p>A detailed-oriented transcript alongside each video with additional definitions and examples students may use to reinforce their knowledge.</p>\n                        </div>\n                        <div class = \"home_item\">\n                            <h1 class = \"Unit_number\">03</h1>\n                            <h2>Assignments</h2>\n                            <p>Questions tailored for specific lessons designed to challenge students to brainstorm and apply their learning to solve problems</p>\n                        </div>\n                    </div>\n                    </div></Fade>\n                </div>\n                \n                <div class = \"home_section purple_background\">    \n                    <div class = \"home_section_header\"><Slide left><div><h3>Our Courses</h3></div></Slide></div> \n                    <Fade><div>\n                    <div class = \"home_item\"><p>Learning programming is a critical skill given how modern industries are shifting towards technology-based affairs and will serve as a valuable addition to a student's skill set.</p></div>\n                    <div class = \"home_bigrid\">\n                        <div class = \"home_item\">\n                            <h1 class = \"Unit_number\">01</h1>\n                            <h2>Python</h2>\n                            <p>With a computer science course focused on Python—a popular computer programming language used throughout modern business and technology—students will be provided with rich content to explore and comprehend the Python language. With supplementals for review, quizzes to test student knowledge, and assignments to reinforce student concepts, our Python course equips students to be well versed-software oriented-programmers.</p>\n                        </div>\n                        <div class = \"home_item\">\n                            <h1 class = \"Unit_number\">02</h1>\n                            <h2>Computer Science Principles</h2>\n                            <p>The computer science principles course goes in-depth about complex concepts of the internet such as Data Security, Data Information, Basic Programming, and Algorithms. This course challenges students to design and evaluate solutions and to apply computer science to solve problems through programming and algorithm development. Students learn about the fundamentals of computers and networking to understand how computer science impacts the world.</p>\n                        </div>\n                    </div>\n                    </div></Fade>\n                </div>\n\n                <div class = \"home_section\">\n                    <div class = \"home_section_header\"><Slide left><div><h3>Our Process</h3></div></Slide></div>\n                    <Fade><div>\n                    <h2>Students Will Be Able To...</h2>\n                    <div class = \"home_bigrid our_process\">\n                        <img src={our_process} alt=\"Our Process\"/>\n                        <img class = \"our_process_icons\" src={our_process_icons} alt=\"Our Process Icons\"/>\n                    </div>\n                    </div></Fade>\n                </div>\n                \n                <div class = \"home_section green_background\">\n                <div class = \"home_section_header\"><Slide left><div><h3>Our Partners</h3></div></Slide></div>\n                    <Fade><div>\n                    <div class = \"home_trigrid icon_trigrid\">\n                        <div class=\"partner_icon1\"><a href=\"https://hhws.org/\"><img class=\"partners\" src={helpinghands} alt=\"Helping Hands Welfare Society\"></img></a></div>\n                        <div class=\"partner_icon2\"><a href=\"https://childimpact.org/\"><img class=\"partners\" src={childimpact} alt=\"Child Impact\"></img></a></div>\n                        <div class=\"partner_icon3\"><a href=\"https://frontlinecs.org/\"><img class=\"partners\"src={fcs} alt=\"Frontline Community Services\"></img></a></div>\n                    </div>\n                    </div></Fade>\n                </div>\n\n                <div class = \"home_section\">\n                <div class = \"home_section_header\"><Slide left><div><h3>Our Locations</h3></div></Slide></div>\n                    <Fade><div>\n                        <div class=\"map\"><img src={map} alt=\"Our Locations\"/></div>\n                    </div></Fade>\n                </div>\n                \n            </div>\n        </div>\n        )\n      }\n}\n\nexport default Home;","import React from 'react';\nimport './styles/About.css';\nimport Header from './Header.js';\nimport Slide from 'react-reveal/Slide';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"home_section\">\n                    <div class = \"home_section_header\"><Slide left><div><h3>About Us</h3></div></Slide></div>\n                    <div class = \"tab_text\">\n                        <p>Our team at Sursum has developed an education platform geared towards preparing young students worldwide for future careers in STEM (science, technology, engineering, and math). Students can access our valuable learning opportunities to not only strengthen their study skills, but also supplement their studies with knowledge in the ever-growing career field of STEM. We strive to foster a generation of thinkers and innovators, and we believe the immersive educational experience we have prepared will come to accomplish that.</p>\n\n                        <p>All of our courses are curated by the Sursum team and fellow students attending Poolesville High School—the #1 High School in Maryland, United States—who are enrolled in STEM-concentrated programs. Our passion and drive for the disciplines of science are well communicated through our program’s engaging coursework, so you will be exposed to an excellent education. </p>\n\n                        <p>Many thanks for exploring our program. We wish you the best in your endeavors and hope to inspire you to pursue an education in the sciences, as STEM is the fulcrum for future progress. </p>\n                    </div>\n                </div>\n            </div>\n        )\n      }\n}\n\nexport default About;\n","import React from 'react';\nimport './styles/Contact.css';\nimport Header from './Header.js';\nimport Slide from 'react-reveal/Slide';\n\nclass Contact extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n\n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"home_section\">\n                <div class = \"home_section_header\"><Slide left><div><h3>Contact Us</h3></div></Slide></div>\n                    <form method=\"post\" netlify-honeypot=\"bot-field\" data-netlify=\"true\" name=\"contact\">\n                        <input type=\"hidden\" name=\"bot-field\" />\n                        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n\n                        <label>Name <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Your name...\" required/></label>\n                        <label>Email Address <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your email...\" required/></label>\n                        <label>Subject <input type=\"text\" name=\"subject\" id=\"subject\" placeholder=\"Insert subject here...\" required/></label>\n                        <label>Message <textarea name=\"message\" id=\"message\" rows=\"5\" placeholder=\"Write your message here..\" required/></label>\n\n                        <div class = \"form_buttons\">\n                            <input type=\"submit\" value=\"Send\" />\n                            <label> </label>\n                            <input type=\"reset\" value=\"Clear\" />\n                        </div>\n                    </form>\n                </div>\n\n            </div>\n        )\n      }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {\n      onClick,\n      props: {\n        activeTab,\n        label,\n      },\n    } = this;\n\n    let className = 'tab_list_item';\n\n    if (activeTab === label) {\n      className += ' tab_list_active';\n    }\n\n    return (\n      <li\n        className={className}\n        onClick={onClick}\n      >\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = (tab) => {\n    this.setState({ activeTab: tab });\n  }\n\n  render() {\n    const {\n      onClickTabItem,\n      props: {\n        children,\n      },\n      state: {\n        activeTab,\n      }\n    } = this;\n\n    return (\n      <div className='tabs'>\n        <ol className='tab_list'>\n          {children.map((child) => {\n            const { label } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n              />\n            );\n          })}\n        </ol>\n        <div className='tab_content'>\n          {children.map((child) => {\n            if (child.props.label !== activeTab) return undefined;\n            return child.props.children;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;","import React, { Component, Fragment } from \"react\";\n\nclass Answer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        Answers: this.props.answer,\n        rightAnswer: this.props.rightAnswer,\n        answered: false,\n        selectedOption: \"\"\n    };\n    this.onOptionClicked = this.onOptionClicked.bind(this);\n    this.isCorrect = this.isCorrect.bind(this);\n  }\n//  create state\n  \n  onOptionClicked(option) {\n    this.setState( {\n      answered: true,\n      selectedOption: option\n    })\n  };\n\n  isCorrect(option){\n    return option === this.state.rightAnswer;\n  };\n  \n  render() {\n   \n    return (\n     \n      <Fragment>\n        <div>\n          {this.state.Answers.map((ans, index) => {\n            return (\n              <button \n                key={index}\n                onClick={() => this.onOptionClicked(ans)}\n                disabled={this.state.answered && !this.isCorrect(ans)}\n                class={`question-option \n                ${this.state.answered && this.isCorrect(ans) && \"correct\"}\n                ${this.state.selectedOption === ans && !this.isCorrect(ans) && \"wrong\"}\n                `}\n              >\n                <span>\n                  {this.state.answered ? (this.isCorrect(ans) ? \"✔\" : \"X\"): (index+1)}\n                </span>\n                <p>{ans}</p>\n              </button>\n            );\n          }) \n          }\n        </div>\n      </Fragment>\n   \n    );\n  }\n}\n\nexport default Answer;\n\n\n\n","import React, { Component, Fragment } from \"react\";\n\nimport Answer from \"./Answer\";\nimport './quiz.css';\n\nclass Quiz extends Component{\n\n  state={\n    dataQuestion:[],\n  }\n\n setStatefunction = () =>{ \n  //  use reactjs setState \n    this.setState( {\n      dataQuestion: [this.props.quizdata]\n    })\n  }\n  componentDidMount(){\n    this.setStatefunction();\n  }\n  render() {\n    return(\n\n      <Fragment> \n         {\n          this.state.dataQuestion.map( data => {\n            console.log( data);\n          return <div className=\"quizComponent\"> \n                      <h2>{data.question}</h2> \n                     <Answer rightAnswer={ data.rightAnswer} answer={ data.FindAnswer} />\n                 </div>\n          })\n         }\n      </Fragment>\n    );\n  }\n}\n\nexport default Quiz;\n\n\n\n","import React, { Fragment } from \"react\";\n\nimport Header from './Header.js';\nimport './styles/Demo.css';\nimport Tabs from '../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from './quiz/Quiz.js';\n\nclass Demo extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">Demo</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    \n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Demo;","import React from 'react';\nimport './styles/Units.css';\nimport Header from './Header.js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport CaretUp from '../images/caret_up.svg';\nimport CaretDown from '../images/caret_down.svg';\nimport {Link} from 'react-router-dom';\n\n//☰\n\nclass Units extends React.Component {\n    constructor() {\n        super();\n    \n        this.state = {\n          displayMenu1: false,\n          displayMenu2: false,\n          displayMenu3: false,\n          displayMenu4: false,\n          displayMenu5: false,\n          displayMenu6: false,\n          displayMenu7: false,\n          displayMenu8: false,\n          displayMenu9: false,\n          displayMenu10: false,\n          displayMenu11: false,\n          displayMenu12: false,\n          displayMenu13: false,\n          displayMenu14: false,\n          displayMenu15: false,\n        };       \n        this.showMenu1 = this.showMenu1.bind(this);\n        this.showMenu2 = this.showMenu2.bind(this);\n        this.showMenu3 = this.showMenu3.bind(this);\n        this.showMenu4 = this.showMenu4.bind(this);\n        this.showMenu5 = this.showMenu5.bind(this);\n        this.showMenu6 = this.showMenu6.bind(this);\n        this.showMenu7 = this.showMenu7.bind(this);\n        this.showMenu8 = this.showMenu8.bind(this);\n        this.showMenu9 = this.showMenu9.bind(this);\n        this.showMenu10 = this.showMenu10.bind(this);\n        this.showMenu11 = this.showMenu11.bind(this);\n        this.showMenu12 = this.showMenu12.bind(this);\n        this.showMenu13 = this.showMenu13.bind(this);\n        this.showMenu14 = this.showMenu14.bind(this);\n        this.showMenu15 = this.showMenu15.bind(this);\n\n        this.closeMenu1 = this.closeMenu1.bind(this);\n        this.closeMenu2 = this.closeMenu2.bind(this);\n        this.closeMenu3 = this.closeMenu3.bind(this);\n        this.closeMenu4 = this.closeMenu4.bind(this);\n        this.closeMenu5 = this.closeMenu5.bind(this);\n        this.closeMenu6 = this.closeMenu6.bind(this);\n        this.closeMenu7 = this.closeMenu7.bind(this);\n        this.closeMenu8 = this.closeMenu8.bind(this);\n        this.closeMenu9 = this.closeMenu9.bind(this);\n        this.closeMenu10 = this.closeMenu10.bind(this);\n        this.closeMenu11 = this.closeMenu11.bind(this);\n        this.closeMenu12 = this.closeMenu12.bind(this);\n        this.closeMenu13 = this.closeMenu13.bind(this);\n        this.closeMenu14 = this.closeMenu14.bind(this);\n        this.closeMenu15 = this.closeMenu15.bind(this);\n      }\n      \n    showMenu1(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu1: true }, () => {\n            document.addEventListener('click', this.closeMenu1);\n        });\n    }\n    showMenu2(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu2: true }, () => {\n            document.addEventListener('click', this.closeMenu2);\n        });\n    }\n    showMenu3(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu3: true }, () => {\n            document.addEventListener('click', this.closeMenu3);\n        });\n    }\n    showMenu4(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu4: true }, () => {\n            document.addEventListener('click', this.closeMenu4);\n        });\n    }\n    showMenu5(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu5: true }, () => {\n            document.addEventListener('click', this.closeMenu5);\n        });\n    }\n    showMenu6(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu6: true }, () => {\n            document.addEventListener('click', this.closeMenu6);\n        });\n    }\n    showMenu7(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu7: true }, () => {\n            document.addEventListener('click', this.closeMenu7);\n        });\n    }\n    showMenu8(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu8: true }, () => {\n            document.addEventListener('click', this.closeMenu8);\n        });\n    }\n    showMenu9(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu9: true }, () => {\n            document.addEventListener('click', this.closeMenu9);\n        });\n    }\n    showMenu10(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu10: true }, () => {\n            document.addEventListener('click', this.closeMenu10);\n        });\n    }\n    showMenu11(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu11: true }, () => {\n            document.addEventListener('click', this.closeMenu11);\n        });\n    }\n    showMenu12(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu12: true }, () => {\n            document.addEventListener('click', this.closeMenu12);\n        });\n    }\n    showMenu13(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu13: true }, () => {\n            document.addEventListener('click', this.closeMenu13);\n        });\n    }\n    showMenu14(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu14: true }, () => {\n            document.addEventListener('click', this.closeMenu14);\n        });\n    }\n    showMenu15(event) {\n        event.preventDefault();       \n        this.setState({ displayMenu15: true }, () => {\n            document.addEventListener('click', this.closeMenu15);\n        });\n    }\n    closeMenu1(event) { \n        this.setState({ displayMenu1: false }, () => {\n            document.removeEventListener('click', this.closeMenu1);\n        }); \n    }\n    closeMenu2(event) {  \n        this.setState({ displayMenu2: false }, () => {\n            document.removeEventListener('click', this.closeMenu2);\n        });       \n    }\n    closeMenu3(event) { \n        this.setState({ displayMenu3: false }, () => {\n            document.removeEventListener('click', this.closeMenu3);\n        });       \n    }\n    closeMenu4(event) {  \n        this.setState({ displayMenu4: false }, () => {\n            document.removeEventListener('click', this.closeMenu4);\n        });       \n    }\n    closeMenu5(event) { \n        this.setState({ displayMenu5: false }, () => {\n            document.removeEventListener('click', this.closeMenu5);\n        });       \n    }\n    closeMenu6(event) {   \n        this.setState({ displayMenu6: false }, () => {\n            document.removeEventListener('click', this.closeMenu6);\n        });       \n    }\n    closeMenu7(event) {   \n        this.setState({ displayMenu7: false }, () => {\n            document.removeEventListener('click', this.closeMenu7);\n        });       \n    }\n    closeMenu8(event) {     \n        this.setState({ displayMenu8: false }, () => {\n            document.removeEventListener('click', this.closeMenu8);\n        });       \n    }\n    closeMenu9(event) {   \n        this.setState({ displayMenu9: false }, () => {\n            document.removeEventListener('click', this.closeMenu9);\n        });       \n    }\n    closeMenu10(event) {    \n        this.setState({ displayMenu10: false }, () => {\n            document.removeEventListener('click', this.closeMenu10);\n        });       \n    }\n    closeMenu11(event) { \n        this.setState({ displayMenu11: false }, () => {\n            document.removeEventListener('click', this.closeMenu11);\n        });       \n    }\n    closeMenu12(event) { \n        this.setState({ displayMenu12: false }, () => {\n            document.removeEventListener('click', this.closeMenu12);\n        });       \n    }\n    closeMenu13(event) {   \n        this.setState({ displayMenu13: false }, () => {\n            document.removeEventListener('click', this.closeMenu13);\n        });       \n    }\n    closeMenu14(event) {  \n        this.setState({ displayMenu14: false }, () => {\n            document.removeEventListener('click', this.closeMenu14);\n        });\n    }\n    closeMenu15(event) { \n        this.setState({ displayMenu15: false }, () => {\n            document.removeEventListener('click', this.closeMenu15);\n        });       \n    }\n\n    render() {\n        return (\n            <div class = \"container\">\n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"home_section\">\n                    <div class = \"home_section_header\"><Slide left><div><h3>Units</h3></div></Slide></div>\n                        <Fade top><div>\n                            <button onClick={this.showMenu1}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                    <div class=\"Unit_text\">\n                                        <div class=\"Unit_number\">Unit 1:</div>\n                                        <div class=\"Unit_title\">Intro and Setup</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu1\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                    }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu1\n                                ? (\n                                <div class=\"menu\">\n                                    <Link to=\"/Unit1Lesson1\"><button>1 Installing Python</button></Link>\n                                    <Link to=\"/Unit1Lesson2\"><button>2 Getting Jupyter Notebook</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu2}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 2:</div>\n                                    <div class=\"Unit_title\">Data Structures and Objects in Python</div>\n                                </div>\n                                    {\n                                        this.state.displayMenu2\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu2\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit2Lesson1\"><button>1 Python Data Types</button></Link>\n                                    <Link to=\"/Unit2Lesson2\"><button>2 Numbers</button></Link>\n                                    <Link to=\"/Unit2Lesson3\"><button>3 Variables</button></Link>\n                                    <Link to=\"/Unit2Lesson4\"><button>4 Strings</button></Link>\n                                    <Link to=\"/Unit2Lesson5\"><button>5 Indexing and Slicing with Strings</button></Link>\n                                    <Link to=\"/Unit2Lesson6\"><button>6 String Properties and Methods</button></Link>\n                                    <Link to=\"/Unit2Lesson7\"><button>7 Print Formatting</button></Link>\n                                    <Link to=\"/Unit2Lesson8\"><button>8 Lists</button></Link>\n                                    <Link to=\"/Unit2Lesson9\"><button>9 Dictionaries</button></Link>\n                                    <Link to=\"/Unit2Lesson10\"><button>10 Tuples</button></Link>\n                                    <Link to=\"/Unit2Lesson11\"><button>11 Sets</button></Link>\n                                    <Link to=\"/Unit2Lesson12\"><button>12 Booleans</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu3}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 3:</div>\n                                    <div class=\"Unit_title\">Comparison Operators</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu3\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu3\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit3Lesson1\"><button>1 Comparison Operators</button></Link>\n                                    <Link to=\"/Unit3Lesson2\"><button>2 Using Comparison Operators with Logical Operators</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu4}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 4:</div>\n                                    <div class=\"Unit_title\">Statements</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu4\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu4\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit4Lesson1\"><button>1 If, Elif, Else Statements</button></Link>\n                                    <Link to=\"/Unit4Lesson2\"><button>2 For Loops</button></Link>\n                                    <Link to=\"/Unit4Lesson3\"><button>3 While Loops</button></Link>\n                                    <Link to=\"/Unit4Lesson4\"><button>4 Other Important Operators</button></Link>\n                                    <Link to=\"/Unit4Lesson5\"><button>5 List Comprehensions</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu5}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 5:</div>\n                                    <div class=\"Unit_title\">Methods and Functions</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu5\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu5\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit5Lesson1\"><button>1 Methods and Documentation</button></Link>\n                                    <Link to=\"/Unit5Lesson2\"><button>2 def</button></Link>\n                                    <Link to=\"/Unit5Lesson3\"><button>3 Basics of Functions</button></Link>\n                                    <Link to=\"/Unit5Lesson4\"><button>4 Using Logic with Functions</button></Link>\n                                    <Link to=\"/Unit5Lesson5\"><button>5 Tuples Unpacking with Functions</button></Link>\n                                    <Link to=\"/Unit5Lesson6\"><button>6 Interactions between Functions</button></Link>\n                                    <Link to=\"/Unit5Lesson7\"><button>7 Arguments and Keyword Arguments</button></Link>\n                                    <Link to=\"/Unit5Lesson8\"><button>8 Lambda Expressions, Map, and Filter Functions</button></Link>\n                                    <Link to=\"/Unit5Lesson9\"><button>9 Nested Statements and Scope</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu6}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 6:</div>\n                                    <div class=\"Unit_title\">Object Oriented Programming</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu6\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu6\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit6Lesson1\"><button>1 Intro to OOP</button></Link>\n                                    <Link to=\"/Unit6Lesson2\"><button>2 Attributes and Class Keywords</button></Link>\n                                    <Link to=\"/Unit6Lesson3\"><button>3 Class Object Attributes and Methods</button></Link>\n                                    <Link to=\"/Unit6Lesson4\"><button>4 Inheritance and Polymorphism</button></Link>\n                                    <Link to=\"/Unit6Lesson5\"><button>5 Special Methods</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu7}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 7:</div>\n                                    <div class=\"Unit_title\">Modules and Packages</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu7\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu7\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit7Lesson1\"><button>1 Pip and Pypi</button></Link>\n                                    <Link to=\"/Unit7Lesson2\"><button>2 Modules and Packages</button></Link>\n                                    <Link to=\"/Unit7Lesson3\"><button>3 __name__ and “__main__”</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu8}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 8:</div>\n                                    <div class=\"Unit_title\">Advanced Modules</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu8\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu8\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit8Lesson1\"><button>1 Advanced Python Modules</button></Link>\n                                    <Link to=\"/Unit8Lesson2\"><button>2 Collection Module</button></Link>\n                                    <Link to=\"/Unit8Lesson3\"><button>3 Datetime Module</button></Link>\n                                    <Link to=\"/Unit8Lesson4\"><button>4 Math and Random Modules</button></Link>\n                                    <Link to=\"/Unit8Lesson5\"><button>5 Debugger</button></Link>\n                                    <Link to=\"/Unit8Lesson6\"><button>6 Regular expressions</button></Link>\n                                    <Link to=\"/Unit8Lesson7\"><button>7 Timing Code</button></Link>\n                                    <Link to=\"/Unit8Lesson8\"><button>8 Zipping and Unzipping Files</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu9}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 9:</div>\n                                    <div class=\"Unit_title\">Decorators</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu9\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu9\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit9Lesson1\"><button>1 Decorators</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu10}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 10:</div>\n                                    <div class=\"Unit_title\">Generators</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu10\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu10\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit10Lesson1\"><button>1 Generators</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu11}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 11:</div>\n                                    <div class=\"Unit_title\">Web Scraping</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu11\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu11\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit11Lesson1\"><button>1 Web Scraping</button></Link>\n                                    <Link to=\"/Unit11Lesson2\"><button>2 Setting Up Scraping Libraries</button></Link>\n                                    <Link to=\"/Unit11Lesson3\"><button>3 Grabbing Titles</button></Link>\n                                    <Link to=\"/Unit11Lesson4\"><button>4 Grabbing Classes</button></Link>\n                                    <Link to=\"/Unit11Lesson5\"><button>5 Grabbing Images</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu12}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 12:</div>\n                                    <div class=\"Unit_title\">PDFs and Spreadsheet CSV Files</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu12\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu12\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit12Lesson1\"><button>1 CSV Files</button></Link>\n                                    <Link to=\"/Unit12Lesson2\"><button>2 PDF Files</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu13}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 13:</div>\n                                    <div class=\"Unit_title\">Emails</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu13\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu13\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit13Lesson1\"><button>1 Sending Emails</button></Link>\n                                    <Link to=\"/Unit13Lesson2\"><button>2 Receiving Emails</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu14}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 14:</div>\n                                    <div class=\"Unit_title\">Advanced Objects and Data Structures</div>\n                                    </div>\n                                    {\n                                        this.state.displayMenu14\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu14\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit14Lesson1\"><button>1 Advanced Numbers</button></Link>\n                                    <Link to=\"/Unit14Lesson2\"><button>2 Advanced Strings</button></Link>\n                                    <Link to=\"/Unit14Lesson3\"><button>3 Advanced Sets</button></Link>\n                                    <Link to=\"/Unit14Lesson4\"><button>4 Advanced Dictionaries</button></Link>\n                                    <Link to=\"/Unit14Lesson5\"><button>5 Advanced Lists</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n                        </div></Fade>\n                        <Fade top><div>\n                            <button onClick={this.showMenu15}>\n                                <div class=\"Unit\" data-sal=\"zoom-in\" data-sal-delay=\"200\" data-sal-duration = \"600\"> \n                                <div class=\"Unit_text\">\n                                    <div class=\"Unit_number\">Unit 15:</div>\n                                    <div class=\"Unit_title\">Conclusion</div>\n                                </div>\n                                    {\n                                        this.state.displayMenu15\n                                            ? (\n                                                <div class=\"Unit_caret\"><img src={CaretDown} alt=\"caret\"></img></div>\n                                            )\n                                            : (\n                                                <div class=\"Unit_caret\"><img src={CaretUp} alt=\"caret\"></img></div>\n                                            )\n                                        }\n                                </div>\n                            </button>\n                            {\n                            this.state.displayMenu15\n                                ? (\n                                <div className=\"menu\">\n                                    <Link to=\"/Unit15Lesson1\"><button>Thank You</button></Link>\n                                </div>\n                                )\n                                : (\n                                null\n                                )\n                            }\n                        </div></Fade>\n                </div>\n            </div>\n        )\n      }\n}\n\nexport default Units;\n","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit1Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit1Lesson1;","var quizQuestions = [\n  {\n    question: \"What franchise would you rather play a game from?\",\n    answerindex : 1,\n    answers: [\n      {\n        type: \"correct\",\n        content: \"Halo\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"Pokemon\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"Uncharted1\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"Uncharted2\",\n        answer : false\n      }\n    ]\n  },\n  {\n    question: \"Which console would you prefer to play with friends?\",\n    answerindex : 1,\n    answers: [\n      {\n        type: \"correct\",\n        content: \"X-Box\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"amdocs 64\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"Playstation 100\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"Playstation 1\",\n        answer : false\n      }\n    ]\n  },\n  {\n    question: \"Which of these racing franchises would you prefer to play a game from?\",\n    answerindex : 1,\n    answers: [\n      {\n        type: \"correct\",\n        content: \"Forza\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"Mario Kart\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"Gran Turismo\",\n        answer : false\n      },\n      {\n        type: \"incorrect\",\n        content: \"Playstation 1qq\",\n        answer : false\n      }\n    ]\n  }\n];\n\nexport default quizQuestions;","import React from 'react';\n\nfunction Question(props) {\n\n  return (\n    <div>\n     <h2 className=\"question\">{props.content}</h2>\n\n  </div>\n  );\n}\n\n\nexport default Question;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n\n  return (\n    <div className=\"questionCount\">\n      <h4>Question <span>{props.counter}</span> of <span>{props.total}</span></h4>\n       {/*{props.counter === 2 ? (<a className=\"result-link\" href=\"\" onClick={props.viewresults}>View Results</a>) : (<div></div>)}*/}\n    </div>\n  );\n\n}\nQuestionCount.propTypes = {\n\tcounter: PropTypes.number.isRequired,\n\ttotal: PropTypes.number.isRequired\n};\n \n\nexport default QuestionCount;","import React from 'react';\nimport '../styles/QuizTemplate.css';\n\nfunction AnswerOption(props) {\n\n  return (\n    <li className=\"answerOption\"> \n      <input type=\"radio\" class=\"radio_item\" value=\"\" name=\"item\" id=\"radio1\"></input>\n      <label class=\"label_item\" for=\"radio1\">{props.answerContent}</label>\n    </li>\n  )\n}\nexport default AnswerOption;","import React, {Component} from 'react'\n\nclass AnswerButton extends Component{\n    state={\n        display: false\n    }\n\n    toggleHandler=()=> {\n        const currentStatus=this.state.display;\n        this.setState({\n            display: !currentStatus\n        })\n    }\n    render(){\n    let content=null;\n    if(this.state.display){\n        content=<h2>{this.props.answer}</h2>\n    }\n        return(\n            <div>\n                <div className=\"answers_btngroup\"><button onClick={this.toggleHandler}>Check Answer</button></div>\n                <div className=\"answersArea\"><div className=\"answers\">{content}</div></div>\n            </div>\n        );\n    }\n}\n\nexport default AnswerButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from '../quizComponents/Question';\nimport QuestionCount from '../quizComponents/QuestionCount';\nimport AnswerOption from '../quizComponents/AnswerOption';\nimport AnswerButton from \"./AnswerButton.js\";\n\nfunction Quiz(props) {\n\n  function renderAnswerOptions(key,index) {\n    return (\n      <AnswerOption\n        index ={index}\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        selectedAnswer={props.selectedAnswer}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n\n  return (\n    <div\n\t\t\tclassName=\"container\"\n\t\t\tcomponent=\"div\"\n\t\t\ttransitionName=\"fade\"\n\t\t\ttransitionEnterTimoeout={800}\n\t\t\ttransitionLeaveTimeout={0}\n\t\t\ttransitionAppear\n\t\t\ttransitionAppearTimeout={500}\n\t\t>\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId} //viewresults={props.viewresults}\n          total={props.questionTotal}\n        />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n\n        <AnswerButton answer=\"hi\"/>\n\n        <div className=\"bottom-footer\" >\n          {props.counter > 0 ? (<button className=\"previous_button\" onClick={props.setPreviousQuestion} >Previous</button>) : (<div></div>)}\n          {props.counter < 2 ? (<button className=\"next_button\" onClick={props.setNextQuestion} >Next</button>) : (<div></div>)}\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nQuiz.propTypes = {\n\tanswer: PropTypes.string.isRequired,\n\tanswerOptions: PropTypes.array.isRequired,\n\tcounter: PropTypes.number.isRequired,\n\tquestion: PropTypes.string.isRequired,\n\tquestionId: PropTypes.number.isRequired,\n\tquestionTotal: PropTypes.number.isRequired,\n\tonAnswerSelected: PropTypes.func.isRequired\n \n \n \n};\nexport default Quiz;","import React from 'react';\n\nclass Result extends React.Component {\n  renderQuestins(){\n    return  this.props.quizResult.map((_data,index) =>{\n        return <div className=\"list-grp\">{_data.question} <br/>correct answer is option: {_data.answerindex} :  and you have selcted {this.props.answers[index]+1} { ((this.props.answers[index]+1) === _data.answerindex) ? (<span className=\"status\">its correct !man</span>) : ''}</div>\n    })\n  }\n  render (){\n    return (\n    <div  className=\"quiz-story\">\n      <div>\n        <strong>Lets see your results</strong>!\n        <div>{this.renderQuestins()}</div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Result;","import React from 'react';\nimport './styles/QuizTemplate.css';\nimport quizQuestions from './quizComponents/questions';\nimport Quiz from './quizComponents/Quiz';\nimport Result from './quizComponents/Result';\n\nclass QuizTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          counter: 0,\n          questionId: 1,\n          question: '',\n          answerOptions: [],\n          allQuestions : [],\n          answer: '',\n          selectedAnswers : {},\n          result: '',\n          answersCount: {\n            correct: 0,\n            incorrect: 0,\n            wrong: 0\n          }\n        };\n        this.setNextQuestion = this.setNextQuestion.bind(this);\n        this.setPreviousQuestion = this.setPreviousQuestion.bind(this);\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n        this.viewresults = this.viewresults.bind(this);\n      }\n      \n      handleAnswerSelected(e){\n        var _self = this;\n        var obj = _self.state.selectedAnswers;\n        var index = parseInt(e.target.value);\n        console.log(\"for selected question number \" + (_self.state.counter + 1) +  \" answer is \" + index + \" selected\");\n        var Qindex = (_self.state.counter )\n        // create map and store all selecred answers with quiz Questions\n        obj[Qindex] = index;\n        _self.setState({selectedAnswers : obj})\n    \n      }\n    \n      componentWillMount() {\n        this.setState({\n          question: quizQuestions[0].question,\n          answerOptions : quizQuestions[0].answers,\n          allQuestions : quizQuestions\n        });\n      }\n    \n    \n      setNextQuestion() {\n        const counter = this.state.counter + 1;\n        const questionId = this.state.questionId + 1;\n    \n        this.setState({\n          counter: counter,\n          questionId: questionId,\n          question: quizQuestions[counter].question,\n          answerOptions: quizQuestions[counter].answers,\n          answer: ''\n        });\n      }\n      setPreviousQuestion() {\n        const counter = this.state.counter - 1;\n        const questionId = this.state.questionId - 1;\n    \n        this.setState({\n          counter: counter,\n          questionId: questionId,\n          question: quizQuestions[counter].question,\n          answerOptions: quizQuestions[counter].answers,\n          answer: ''\n        });\n      }\n    \n      getResults() {\n        const answersCount = this.state.answersCount;\n        const answersCountKeys = Object.keys(answersCount);\n        const answersCountValues = answersCountKeys.map((key) => answersCount[key]);\n        const maxAnswerCount = Math.max.apply(null, answersCountValues);\n    \n        return answersCountKeys.filter((key) => answersCount[key] === maxAnswerCount);\n      }\n    \n      setResults(result) {\n        this.setState({ result: this.state.answersCount.correct});\n      }\n    \n      renderQuiz() {\n        return (\n          <Quiz viewresults={this.viewresults}\n            setNextQuestion={this.setNextQuestion}\n            counter={this.state.counter}\n            setPreviousQuestion={this.setPreviousQuestion}\n            answer={this.state.answer}\n            selectedAnswer = {this.state.selectedAnswers[this.state.counter]}\n            answerOptions={this.state.answerOptions}\n            questionId={this.state.questionId}\n            question={this.state.question}\n            questionTotal={quizQuestions.length}\n            onAnswerSelected = {this.handleAnswerSelected}\n          />\n        );\n      }\n    \n      renderResult() {\n        return (\n          <Result quizResult={this.state.allQuestions} answers={this.state.selectedAnswers} />\n        );\n      }\n      viewresults(e){\n        e.preventDefault();\n        this.setState({result : true})\n      }\n    render() {\n        return (\n            <div>\n                {this.state.result ? this.renderResult() : this.renderQuiz()}\n            </div>\n        )\n    }\n}\n\nexport default QuizTemplate;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit1Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">02 Numbers</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit1Lesson2;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit2Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">02 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson1;","import React, { Fragment } from \"react\";\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit2Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">Numbers</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Types of numbers</div>\n                                    <div class=\"paragraph\">Python has various \"types\" of numbers. In this supplemental you’ll be looking at integers and floating point numbers.</div>\n                                    <div class=\"paragraph\">Integers are whole numbers, positive or negative. Examples of integers are: 5 and -5.</div>\n                                    <div class=\"paragraph\">Floating point numbers in Python are different from integers because they have a decimal point in them or use an exponential (e) to define the number. An example of a floating point number would be 5.0 or -8.3. Another way you might see floating point numbers written as is with the previously mentioned (e). An example would be something like: 3E2 (3 times 10 to the power of 2).</div>\n                                    <div class=\"paragraph_NI\">Here is a table of the two main types we will spend most of our time on:</div>                \n                                    <table>\n                                        <tr>\n                                            <th>Examples</th>\n                                            <th>Number \"Type\"</th>\n                                        </tr>\n                                        <tr>\n                                            <td>1,2,-5,1000</td>\n                                            <td>Integers</td>\n                                        </tr>\n                                        <tr>\n                                            <td>1.2,-0.5,2e2,3E2</td>\n                                            <td>Floating-point numbers</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph_NI\">Below are some of the most commonly used Arithmetic Operators along with a few examples.</div> \n                                    <table>\n                                        <tr>\n                                            <th>Operator</th>\n                                            <th>Example</th>\n                                            <th>Definition</th>\n                                        </tr>\n                                        <tr>\n                                            <td>Addition (+)</td>\n                                            <td>x+3</td>\n                                            <td>Adds two values together</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Subtraction (-)</td>\n                                            <td>x-1</td>\n                                            <td>Subtracts one value from another</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Multiplication (*)</td>\n                                            <td>x*5</td>\n                                            <td>Multiplies one value with another</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Division (/)</td>\n                                            <td>x/y</td>\n                                            <td>Divides one value from another</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Modulus (%)</td>\n                                            <td>x%y</td>\n                                            <td>Finds the remainder between two numbers after being divided with one another</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Floor (//)</td>\n                                            <td>x//y</td>\n                                            <td>Rounds the values of two divided values to the nearest whole number</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Exponent (**)</td>\n                                            <td>x**y</td>\n                                            <td>Raises one variable by the power of another</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"tab_header\">Basic Arithmetic</div>\n                                    <table>\n                                        <tr>\n                                            <th></th>\n                                            <th>Syntax</th>\n                                            <th>Outcome</th>\n                                        </tr>\n                                        <tr>\n                                            <th>Addition</th>\n                                            <td>\n                                                <div>x=3</div>\n                                                <div>x+5</div>\n                                            </td>\n                                            <td>8</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Subtraction</th>\n                                            <td>\n                                                <div>x=8</div>\n                                                <div>y=3</div>\n                                                <div>x-y</div>\n                                            </td>\n                                            <td>5</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Multiplication</th>\n                                            <td>\n                                                <div>x=9</div>\n                                                <div>y=3</div>\n                                                <div>x*y</div>\n                                            </td>\n                                            <td>27</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Division</th>\n                                            <td>\n                                                <div>x=60</div>\n                                                <div>y=6</div>\n                                                <div>x/y</div>\n                                            </td>\n                                            <td>10</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Floor</th>\n                                            <td>\n                                                <div>x=66</div>\n                                                <div>y=8</div>\n                                                <div>x//y</div>\n                                                <div class=\"comment\">#The answer would be 8.25, however with Floor it rounds to the nearest whole number which is 8</div>\n                                            </td>\n                                            <td>8</td>\n                                        </tr>\n                                        <tr>\n                                            <th>Exponents</th>\n                                            <td>\n                                                <div>x=5</div>\n                                                <div>y=3</div>\n                                                <div>x**y</div>\n                                            </td>\n                                            <td>125</td>\n                                        </tr>\n                                    </table>\n                                    \n                                   \n                                    \n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson2;","import React, { Fragment } from \"react\";\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit2Lesson3 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">Variables</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Variables...what are they?</div>\n                                    <div class=\"paragraph\">In python, variables are like storage containers that can hold data types for you to call anywhere in your code. They save you time and energy when in ways that programming would not be possible otherwise. In this supplemental, you’ll be looking at how to create variables and the different ways you can use them.</div>\n                                    <div class=\"tab_header\">Rules for variable names</div>\n                                    <div class=\"paragraph\">Like all things Python, there are certain rules which must be followed when creating variable names. Here’s a quick list of what you either cannot or should avoid when creating variable names. </div>\n                                    <ul class=\"list\">\n                                        <li>Names can not start with a number</li>\n                                        <li>Names can not contain spaces, use \"_\" instead</li>\n                                        <li>Names can not contain any of these symbols: {`'\",<>/?:|\\!@#%^&*~-+`}</li>\n                                        <li>It's highly advised that variable names use lowercase letters with underscores for spaces</li>\n                                        <li>Avoid using Python built-in keywords like list and str</li>\n                                        <li>Avoid using the single characters l (as in like), O (as in Orbit) and I (as in Ice). They can be confused for 1 and 0</li>\n                                    </ul>  \n                                    <div class=\"tab_header\">Dynamic Typing</div>      \n                                    <div class=\"paragraph\">Python uses dynamic typing. This means you can reassign variables to different data types (assign a variable new things). This makes Python very flexible in assigning data types and is what sets Python apart from other programming languages that are statically typed. </div>      \n                                    <table>\n                                        <tr>\n                                            <th>Syntax</th>\n                                            <th>Outcome</th>\n                                        </tr>\n                                        <tr>\n                                            <td>my_dog=3</td>\n                                            <td>\n                                                <div>my_dog</div>\n                                                <div>{`>>`}3</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>my_dog= ‘Molly’</td>\n                                            <td>\n                                                <div>my_dog</div>\n                                                <div>{`>>`}Molly</div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph\">Variable assignment follows a strict format of variable_name = object, where a single equals sign = is an assignment operator. An assignment operator is what assigns an object to the variable for it to be “stored”. </div> \n                                    <table>\n                                        <tr>\n                                            <th>Syntax</th>\n                                            <th>Outcome</th>\n                                        </tr>\n                                        <tr>\n                                            <td>a=5</td>\n                                            <td>\n                                                <div>a</div>\n                                                <div>{`>>`}5</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>a=10</td>\n                                            <td>\n                                                <div>a</div>\n                                                <div>{`>>`}10</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>a+a</td>\n                                            <td>\n                                                <div>{`>>`}20</div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph\">Python lets you reassign variables with a reference to the same object.</div>\n                                    <table>\n                                        <tr>\n                                            <th>Syntax</th>\n                                            <th>Outcome</th>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div>a=10</div>\n                                                <div>a=a+20</div>\n                                            </td>\n                                            <td>\n                                                <div>a</div>\n                                                <div>{`>>`}30</div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph\">There's actually a shortcut for this. Python lets you add, subtract, multiply and divide numbers with reassignment using += for addition, -= for subtraction, *= for multiplication, and /= for division.</div>\n                                    <table>\n                                        <tr>\n                                            <th>Syntax</th>\n                                            <th>Outcome</th>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div>b=5</div>\n                                                <div>b+=10</div>\n                                            </td>\n                                            <td>\n                                                <div>b</div>\n                                                <div>{`>>`}15</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>b*=3</td>\n                                            <td>\n                                                <div>b</div>\n                                                <div>{`>>`}45</div>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>b</td>\n                                            <td>\n                                                <div>b</div>\n                                                <div>{`>>`}45</div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"tab_header\">What’s the type?</div>\n                                    <div class=\"paragraph\">What if you created a variable and you wanted to know what data type the variable is assigned. Well, you can check what type of object is assigned to a variable by using Python's built-in type() function. A quick reminder of what the different data types in Python are:</div>\n                                    <ul class=\"list\">\n                                        <li>int (for integer)</li>\n                                        <li>float</li>\n                                        <li>str (for string)</li>\n                                        <li>list</li>\n                                        <li>tuple</li>\n                                        <li>dict (for dictionary)</li>\n                                        <li>set</li>\n                                        <li>bool (for Boolean True/False)</li>\n                                    </ul>\n                                    <div class=\"paragraph\">To use the type function simply write out type(variable_name) and it will return to you the data type of the object found in that variable.</div>\n                                    <table>\n                                        <tr>\n                                            <th>Syntax</th>\n                                            <th>Outcome</th>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div>a = (1,2)</div>\n                                                <div>type(a)</div>\n                                            </td>\n                                            <td>\n                                                <div>tuple</div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson3;","import React, { Fragment } from \"react\";\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit2Lesson4 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">Strings</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Strings</div>\n                                    <div class=\"paragraph\">What are Strings in Python? Well, Strings are used in Python to record information that contains letters, words, and other characters. An example would be your own name! In this supplemental, you’ll be learning about Strings, how to print them out, and some basic functionalities you can use.</div>\n                                    <div class=\"tab_header\">Creating a String</div>\n                                    <div class=\"paragraph\">To create a string in Python you need to surround characters in either single quotes or double quotes.</div>\n                                    <table>\n                                        <tr><td>‘Hello World’</td></tr>\n                                        <tr><td>‘This is a string’</td></tr>\n                                        <tr><td>“This is also a string”</td></tr>\n                                    </table>\n                                    <div class=\"paragraph\">Notice how we have the choice to use either single quotes or double quotes...why is that? Well it’s because certain lines of text would not work if it were surrounded by single quotes. The best way to see why is through an example.</div>\n                                    <table>\n                                        <tr>\n                                            <th>Syntax</th>\n                                            <th>Outcome</th>\n                                        </tr>\n                                        <tr>\n                                            <td>‘It’s so cool to learn about Strings’</td>\n                                            <td>{`>>`}error</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph multi\">The reason for the error above is because the single quote in <div class=\"bold\">It’s</div> stopped Python from going through the entire string. When using single quotes, Python only looks for the second quote that proceeds the first quote. In our case, Python only read It and could not process the rest of the text. So if you ever have an apostrophe or a single quote in your string, use the double quotes to avoid running into errors!</div>\n                                    <table>\n                                        <tr><td>“It’s so cool to learn about Strings”</td></tr>\n                                    </table>\n                                    <div class=\"tab_header\">Printing a String</div>      \n                                    <div class=\"paragraph_NI\">We can use a print statement to print a string.</div>      \n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(<div class=\"str\">'Hello World 1'</div>)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(<div class=\"str\">'Hello World 2'</div>)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(<div class=\"str\">'Use \\n to print a new line'</div>)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(<div class=\"str\">'\\n'</div>)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(<div class=\"str\">'Cool?'</div>)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Hello World 1</div>\n                                            <div>Hello World 2</div>\n                                            <div>{`>>`}Use</div>\n                                            <div>{`>>`} to print a new line</div>\n                                            <br/>\n                                            <div>Cool?</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">String Basics</div>\n                                    <div class=\"paragraph_NI\">We can also use a function called len() to check the length of a string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"yel\">len</div>(<div class=\"str\">'Hello World'</div>)</div>\n                                            \n                                        </div>\n                                        <div class=\"output\">\n                                            <div>11</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Python's built-in len() function counts all of the characters in the string, including spaces and punctuation.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson4;","import React, { Fragment } from \"react\";\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit2Lesson5 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">Indexing and Slicing with Strings</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">String Indexing</div>\n                                    <div class=\"paragraph\">From our previous lesson, we learned about Strings and the different nuances that we need to be aware of. One thing about Strings which we can utilize is the fact that Strings are a sequence. This means that the characters which make up a String are in a specific order. Think about your own name. Your own name is a sequence of characters that remains constant. If you were asked what the first letter of your name is, you’d be able to give an answer because the first letter of your name is part of a sequence that does not change. Because Strings are a sequence, we can use indexing to call (get) certain parts of a String.</div>\n                                    <div class=\"paragraph\">In Python, we use brackets [] after an object to call its index. It’s important to note that indexing starts at 0 for Python meaning that the first character of a sequence isn’t indicated by the value 1 but by the value 0. So if you wanted to grab the first letter of your own name by indexing, you’d grab index 0 since that is the position of the first letter. This concept is referred to as index position and it is extremely important so let’s go through one example of index positions.</div>\n                                    <table>\n                                        <tr>\n                                            <td>H</td>\n                                            <td>E</td>\n                                            <td>L</td>\n                                            <td>L</td>\n                                            <td>O</td>\n                                        </tr>\n                                        <tr>\n                                            <td>0</td>\n                                            <td>1</td>\n                                            <td>2</td>\n                                            <td>3</td>\n                                            <td>4</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph\">If someone were to ask you the numeric position of the last letter of the word “Hello” you'd say that it would be the 5th letter in the word. Now what if you wanted to grab that letter? Well, you’d probably tell someone to grab the 5th letter of Hello to get the last letter and if they were to follow your instructions they would have the letter “o”.</div>\n                                    <div class=\"paragraph\">But how would you do this in Python? If you wanted to grab the last letter of the word “Hello” in Python you would index at position 4 rather than 5. This is because the index position of the last letter in the word “Hello” is index position 4. Remember, index positions start with the number 0. So the first character of a string is always index position 0 and the following character 1 then 2 and so on.</div>\n                                    <div class=\"paragraph\">If you’re still confused, let’s look at some indexing examples to drive the point home.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Print the object</div>\n                                            <div class=\"multi\">b = <div class=\"str\">‘Hello World’</div></div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Hello World</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Let's start indexing.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Show first element (in this case a letter)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[0])</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[1])</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[2])</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>H</div>\n                                            <div>e</div>\n                                            <div>l</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We can use a \":\" to perform slicing which grabs entire sections of Strings up to a designated point. </div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Grab everything past the first term all the way to the length of b which is len(b)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[1:])</div>\n                                            <div class=\"comment\"># Note that there is no change to the original b</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b)</div>\n                                            <div class=\"comment\"># Grab everything UP TO but not including the 3rd index</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[:3])</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>ello World</div>\n                                            <div>Hello World</div>\n                                            <div>Hel</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">What is going on with the slicing example above? Here we're telling Python to grab everything from 0 up to 3 but not including that 3rd index.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Everything</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[:])</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Hello World</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We can also use negative indexing to go backwards.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Last letter (one index behind 0 so it loops back around)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[-1])</div>\n                                            <div class=\"comment\"># Grab everything but the last letter</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[:-1])</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>d</div>\n                                            <div>Hello Worl</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">We can also use index and slice notation to grab elements of a sequence by a specified step size. A step size is the way Python goes through the characters of a String. The default step size is 1 which makes sense since Python reads every character in a string one after the other. However, if it were a step size of two, Python would only read characters that are 2 positions away from the last character. Let’s take a look at an example to clarify this.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Grab everything, but go in steps size of 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[::1])</div>\n                                            <div class=\"comment\"># Grab everything, but go in step sizes of 2</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[::2])</div>\n                                            <div class=\"comment\"># We can use this to print a string backwards</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b[::-1])</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Hello World</div>\n                                            <div>HloWrd</div>\n                                            <div>dlroW olleH</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson5;","import React, { Fragment } from \"react\";\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit2Lesson6 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">String Properties and Methods</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">String Properties</div>\n                                    <div class=\"paragraph\">Now that we’ve gone over Strings and how we can use indexing and slicing, let’s take a look at some other governing principles of String properties. It's important to note that Strings have an important property known as immutability, meaning once a string is created the elements within it can not be changed or replaced. Here’s a quick example.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\">b = <div class=\"str\">‘Hello World’</div></div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Hello World</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Let's try to change the first letter to 'x'</div>\n                                            <div class=\"multi\">b[0] = <div class=\"str\">'x'</div></div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>TypeError                                 Traceback (most recent call last)</div>\n                                            <div>{`<ipython-input-26-976942677f11> in <module>()`}</div>\n                                            <div>      1 # Let's try to change the first letter to 'x'</div>\n                                            <div>----{`>`} 2 b[0] = 'x'</div>\n                                            <div>TypeError: 'str' object does not support item assignment</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The error is telling us that we cannot change the item assignment. In english, this means we can’t just replace the characters in a String.</div>\n                                    <div class=\"paragraph\">So do we have any options? Well what we can do is concatenate Strings. Concatenation allows us to add onto a String. Let’s take a look at an example.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\">b = <div class=\"str\">‘Hello World’</div></div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b)</div>\n                                            <div class=\"comment\"># Concatenate strings!</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b + <div class=\"str\">' concatenate me!'</div>)</div>\n                                            <div class=\"comment\"># We can reassign b completely though</div>\n                                            <div class=\"multi\">b = b + <div class=\"str\">‘concatenate me!’</div></div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(b)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Hello World</div>\n                                            <div>Hello World concatenate me!</div>\n                                            <div>Hello World concatenate me!</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We can use the multiplication symbol to create repetition.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\">letter = <div class=\"str\">‘a’</div></div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(letter*10)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>aaaaaaaaaa</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Basic Built-in String Methods</div>\n                                    <div class=\"paragraph\">Objects in Python usually have built-in methods. These methods are functions inside the object that can perform actions or commands on the object itself. We’ll explore methods and functions later on in future lessons but for now, think of methods as cool tips and tricks  that easily allow you to alter the output of your programs.</div>\n                                    <div class=\"multi\"><div class=\"paragraph\">Now how do we call methods in Python? Well, we call methods by using a period and then the method name. An example would be like this:<div class=\"bold\">object.method(parameters)</div></div></div>\n                                    <div class=\"paragraph\">We can pass extra arguments into the method where parameters exist. If you don’t fully understand the details about arguments, functions, and objects don’t worry about it! As mentioned before, we’ll take a look at these concepts in greater detail in future lessons. For now, let’s see how we can use built-in methods on Strings.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\">s = <div class=\"str\">'Hello World concatenate me!’</div></div>\n                                            <div class=\"comment\"># Upper Case a string</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(s.upper())</div>\n                                            <div class=\"comment\"># Lower Case a string</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(s.lower())</div>\n                                            <div class=\"comment\"># Split a string by blank space (this is the default)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(s.split())</div>\n                                            <div class=\"comment\"># Split by a specific element (doesn't include the element that was split on)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(s.split(<div class=\"str\">'W'</div>))</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>HELLO WORLD CONCATENATE ME!</div>\n                                            <div>hello world concatenate me!</div>\n                                            <div>['Hello', 'World', 'concatenate', 'me!']</div>\n                                            <div>['Hello ', 'orld concatenate me!']</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson6;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit2Lesson7 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson7;","import React, { Fragment } from \"react\";\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit2Lesson8 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">Lists</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Lists</div>\n                                    <div class=\"paragraph\">Previously, we learned about strings and how they are a sequence in Python. Lists can be thought of as the most general version of a sequence in Python. They hold elements in ordered quantities and these elements can be selected by calling their index position. But unlike strings which are immutable, elements inside a list can be changed</div>\n                                    <div class=\"paragraph\">In this supplemental, you’ll learn about lists, how to create them, why we use them, and how we can maximize the usability of lists in Python.</div>\n                                    <div class=\"paragraph\">Lists are constructed with brackets [] and commas separating every element in the list.</div>\n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <div class=\"comment\"># Assign a list to an variable named my_list</div>\n                                                <div>my_list = [1,2,3]</div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph\">We just created a list of integers, but lists can actually hold different object types. Let’s take a look at an example.</div>\n                                    <table>\n                                        <tr>\n                                            <td>my_list = ['A string',23,100.232,'o']</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph\">Just like strings, the len() function will tell you how many items are in the sequence of the list.</div>\n                                    <table>\n                                        <tr>\n                                            <th>Syntax</th>\n                                            <th>Outcome</th>\n                                        </tr>\n                                        <tr>\n                                            <td>len(my_list)</td>\n                                            <td>4</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"tab_header\">Indexing and Slicing</div>\n                                    <div class=\"paragraph\">Indexing and slicing work just like in strings. We will create a new list to remind ourselves of how this works:</div>\n                                    <div class=\"paragraph_NI\">Let <div class=\"bold\">my_list = ['one','two','three',4,5]</div></div>\n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <div class=\"comment\"># Grab element at index 0</div>\n                                                <div>my_list[0]</div>\n                                            </td>\n                                            <td>'one'</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"comment\"># Grab index 1 and everything past it</div>\n                                                <div>my_list[1:]</div>\n                                            </td>\n                                            <td>['two', 'three', 4, 5]</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"comment\"># Grab everything UP TO index 3</div>\n                                                <div>my_list[:3]</div>\n                                            </td>\n                                            <td>['one', 'two', 'three']</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph_NI\">We can also use \"+\" to concatenate lists, just like we did for strings.</div>\n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <div>my_list + ['new item']</div>\n                                                <div class=\"comment\"># Note: This doesn't actually change the original list.</div>\n                                            </td>\n                                            <td>['one', 'two', 'three', 4, 5, 'new item']</td>\n                                        </tr>\n                                        <tr>\n                                            <td>my_list</td>\n                                            <td>['one', 'two', 'three', 4, 5]</td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <div class=\"comment\"># Reassign</div>\n                                                <div>my_list = my_list + ['add new item permanently']</div>\n                                                <div>my_list</div>\n                                            </td>\n                                            <td>['one', 'two', 'three', 4, 5, 'add new item permanently']</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"paragraph_NI\">We can also use the \"*\" for a duplication method similar to strings:</div>\n                                    <table>\n                                        <tr>\n                                            <td>\n                                                <div>my_list * 2</div>\n                                                <div class=\"comment\"># Again, doubling not permanent</div>\n                                            </td>\n                                            <td>['one', 'two', 'three', 4, 5, 'add new item permanently', 'one', 'two', 'three', 4, 5, 'add new item permanently']</td>\n                                        </tr>\n                                        <tr>\n                                            <td>my_list</td>\n                                            <td>['one', 'two', 'three', 4, 5, 'add new item permanently']</td>\n                                        </tr>\n                                    </table>\n                                    <div class=\"tab_header\">Basic List Methods</div>\n                                    <div class=\"paragraph\">Unlike arrays in other programming languages, lists in Python tend to be more flexible for two primary reasons: they have no fixed size (meaning we don't have to specify how long the list will be), and they have no limitations as to what data types can be stored.</div>\n                                    <div class=\"paragraph_NI\">We’ll explore some more special methods for lists:</div>\n                                    <div class=\"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Create a new list</div>\n                                            <div>my_list = [1,2,3]</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Use the <div class=\"bold\">append</div> method to permanently add an item to the end of a list:</div>\n                                    <div class=\"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Append</div>\n                                            <div class=\"multi\">my_list.append(<div class=\"str\">'append me!'</div>)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(my_list)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>[1, 2, 3, 'append me!']</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Use <div class=\"bold\">pop</div> to \"pop off\" or take off an item from the list. By default pop takes off the last index, but you can also specify which index to pop off. Let's see an example:</div>\n                                    <div class=\"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Pop off the 0 indexed item</div>\n                                            <div>my_list.pop(0)</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(my_list)</div>\n                                            <div class=\"comment\"># Assign the popped element, remember default popped index is -1</div>\n                                            <div>popped_item = my_list.pop()</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(popped_item)</div>\n                                            <div class=\"comment\"># Show remaining list</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(my_list)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>[2, 3, 'append me!']</div>\n                                            <div>append me!</div>\n                                            <div>[2, 3]</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">It should also be noted that lists indexing will return an error if there is no element at that index. For example:</div>\n                                    <div class=\"code_block\">\n                                        <div class=\"input\">\n                                            <div>my_list[100]</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>IndexError                                Traceback (most recent call last)</div>\n                                            <div>{`<ipython-input-22-af6d2015fa1f> in <module>()`}</div>\n                                            <div>{`----> 1 my_list[100]`}</div>\n                                            <div>IndexError: list index out of range</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We can use the <div class=\"bold\">sort</div> method and the <div class=\"bold\">reverse</div> methods to also change your lists:</div>\n                                    <div class=\"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\">letter_list = [<div class=\"str\">'a'</div>,<div class=\"str\">'e'</div>,<div class=\"str\">'x'</div>,<div class=\"str\">'b'</div>,<div class=\"str\">'c'</div>]</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(letter_list)</div>\n                                            <div class=\"comment\"># Use reverse to reverse order. This will permanently change your list. </div>\n                                            <div>letter_list.reverse()</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(letter_list)</div>\n                                            <div class=\"comment\"># Use sort to sort the list (in this case alphabetical order, but for numbers it will go in an ascending order (least to greatest))</div>\n                                            <div>letter_list.sort()</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(letter_list)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>['a', 'e', 'x', 'b', 'c']</div>\n                                            <div>['c', 'b', 'x', 'e', 'a']</div>\n                                            <div>['a', 'b', 'c', 'e', 'x']</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Nesting Lists</div>\n                                    <div class=\"paragraph\">A great feature of Python data structures is that they support nesting which allows for data structures within data structures. For example: A list inside a list.</div>\n                                    <div class=\"paragraph_NI\">Let's see how this works!</div>\n                                    <div class=\"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Let's make three lists</div>\n                                            <div>list_1=[1,2,3]</div>\n                                            <div>list_2=[4,5,6]</div>\n                                            <div>list_3=[7,8,9]</div>\n                                            <div class=\"comment\"># Make a list of lists to form a matrix</div>\n                                            <div>matrix = [list_1,list_2,list_3]</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(matrix)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">We can again use indexing to grab elements, but now there are two levels for the index. The items in the matrix object and then the items inside that list.</div>\n                                    <div class=\"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Grab first item in matrix object</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(matrix[0])</div>\n                                            <div class=\"comment\"># To Grab the first item of the first item in the matrix object you need to call the index of the indexed element</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(matrix[0][0])</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>[1, 2, 3]</div>\n                                            <div>1</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson8;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit2Lesson9 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson9;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit2Lesson10 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson10;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit2Lesson11 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson11;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit2Lesson12 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit2Lesson12;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit3Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit3Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit3Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit3Lesson2;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit4Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit4Lesson1;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit4Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/tc3_vLdSAV0?start=8\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> <div class=\"str\">'This is a string.'</div>:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit4Lesson2;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit4Lesson3 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit4Lesson3;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit4Lesson4 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit4Lesson4;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit4Lesson5 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit4Lesson5;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit5Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit5Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson2;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit5Lesson3 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson3;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit5Lesson4 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson4;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit5Lesson5 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson5;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit5Lesson6 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson6;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit5Lesson7 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson7;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit5Lesson8 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson8;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit5Lesson9 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit5Lesson9;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit6Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit6Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit6Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit6Lesson2;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit6Lesson3 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit6Lesson3;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit6Lesson4 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit6Lesson4;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit6Lesson5 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> 'This is a string.':</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit6Lesson5;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit7Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit7Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit7Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit7Lesson2;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit7Lesson3 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit7Lesson3;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit8Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit8Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit8Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit8Lesson2;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit8Lesson3 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 moke</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit8Lesson3;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit8Lesson4 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> 'This is a string.':</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit8Lesson4;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit8Lesson5 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> 'This is a string.':</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit8Lesson5;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit8Lesson6 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> 'This is a string.':</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit8Lesson6;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit8Lesson7 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> 'This is a string.':</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit8Lesson7;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit8Lesson8 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> 'This is a string.':</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit8Lesson8;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit9Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit9Lesson1;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit10Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit10Lesson1;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit11Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit11Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit11Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit11Lesson2;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit11Lesson3 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit11Lesson3;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit11Lesson4 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit11Lesson4;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\nclass Unit11Lesson5 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit11Lesson5;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit12Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit12Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit12Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit12Lesson2;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit13Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit13Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit13Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit13Lesson2;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit14Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit14Lesson1;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit14Lesson2 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit14Lesson2;","import React from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Particles from 'react-particles-js';\nimport Slide from 'react-reveal/Slide';\nimport Fade from 'react-reveal/Fade';\nimport QuizTemplate from '../../components/QuizTemplate';\n\nclass Unit14Lesson3 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    \n                        <div class = \"lesson_video\">\n                            <iframe src=\"https://www.youtube.com/embed/kLyCGHT05JQ?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                        </div>\n                        <Particles \n                            params={{\n                                \"particles\": {\n                                    \"number\": {\n                                        \"value\": 100\n                                    },\n                                    \"size\": {\n                                        \"value\": 3\n                                    }\n                                },\n                                \"interactivity\": {\n                                    \"events\": {\n                                        \"onhover\": {\n                                            \"enable\": true,\n                                            \"mode\": \"repulse\"\n                                        }\n                                    }\n                                }\n                            }}                            \n                        />\n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <Slide right><div><div class = \"lesson_title grow\">01 Object & Data Structure Basics</div></div></Slide>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"paragraph\">\n                                        Pizza (Italian: [ˈpittsa], Neapolitan: [ˈpittsə]) is a savory dish of Italian origin consisting of a usually round, flattened base of leavened wheat-based dough topped with tomatoes, cheese, and often various other ingredients (such as anchovies, mushrooms, onions, olives, pineapple, meat, etc.) which is then baked at a high temperature, traditionally in a wood-fired oven.[1] A small pizza is sometimes called a pizzetta. A person who makes pizza is known as a pizzaiolo.\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <QuizTemplate/>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit14Lesson3;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit14Lesson4 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> 'This is a string.':</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit14Lesson4;","import React, { Fragment }from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit14Lesson5 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">For Loops</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">for Loops</div>\n                                    <div class=\"paragraph\">A for loop acts as an iterator in Python; it goes through items that are in a sequence or any other iterable item. Objects that we've learned about that we can iterate over include strings, lists, tuples, and even built-in iterables for dictionaries, such as keys or values.</div>\n                                    <div class=\"paragraph_NI\">Here's the general format for a for loop in Python:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> object:</div>\n                                            <div class=\"comment in_1\">'''statements to do stuff'''</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">The variable name used for the item is completely up to the coder, so use your best judgment for choosing a name that makes sense and you will be able to understand when revisiting your code. This item name can then be referenced inside your loop, for example if you wanted to use if statements to perform checks.</div>\n                                    <div class=\"paragraph\">Let's go ahead and work through several examples of for loops using a variety of data object types.</div>\n                                    <div class=\"tab_header\">Example 1</div>\n                                    <div class=\"paragraph_NI\">Iterating through a list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class = \"comment\"># We'll learn how to automate this sort of list in the next lecture</div>\n                                            <div>list1 = [1,2,3,4,5,6,7,8,9,10]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                            <div>6</div>\n                                            <div>7</div>\n                                            <div>8</div>\n                                            <div>9</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">Now let's add an if statement to check for even numbers.</div>\n                                    <div class=\"tab_header\">Modulo</div>\n                                    <div class=\"paragraph\">The modulo allows us to get the remainder in a division and uses the % symbol. For example:</div>\n                                    <div class=\"paragraph\">17 % 5 = 2</div>\n                                    <div class=\"paragraph\">This makes sense since 17 divided by 5 is 3 remainder 2. Let's see a few more quick examples:</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>10 % 3 = 1 (3 Remainder 1)</li>\n                                            <li>18 % 7 = 4 (2 Remainder 4)</li>\n                                            <li>4 % 2 = 0 (2 no remainder)</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"paragraph\">Notice that if a number is fully divisible with no remainder, the result of the modulo call is 0. We can use this to test for even numbers, since if a number modulo 2 is equal to 0, that means it is an even number.</div>\n                                    <div class=\"tab_header\">Example 2</div>\n                                    <div class=\"paragraph_NI\">Let's print only the even numbers from that list.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>4</div>\n                                            <div>6</div>\n                                            <div>8</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph_NI\">We could have also put an else statement in there:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">if</div> num % 2 == 0:</div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>(num)</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">else:</div></div>\n                                            <div class=\"in_2\"><div class=\"yel\">print</div>('Odd number')</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>Odd number</div>\n                                            <div>2</div>\n                                            <div>Odd number</div>\n                                            <div>4</div>\n                                            <div>Odd number</div>\n                                            <div>6</div>\n                                            <div>Odd number</div>\n                                            <div>8</div>\n                                            <div>Odd number</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 3</div>\n                                    <div class=\"paragraph\">Another common idea during a for loop is keeping some sort of running tally during multiple loops. For example, let's create a for loop that sums up the list:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum = list_sum + num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">Read over the above cell and make sure you understand fully what is going on. Also, we could have implemented a += to perform the addition towards the sum. For example:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Start sum at zero</div>\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> num <div class=\"purp\">in</div> list1:</div>\n                                            <div class=\"in_1\">list_sum += num</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>(list_sum)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>55</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 4</div>\n                                    <div class=\"paragraph\">We've used for loops with lists, how about with strings? Remember strings are a sequence so when we iterate through them we will be accessing each item in that string.</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list_sum = 0</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> letter <div class=\"purp\">in</div> 'This is a string.':</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(letter)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>T</div>\n                                            <div>h</div>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>i</div>\n                                            <div>s</div>\n                                            <br></br>\n                                            <div>a</div>\n                                            <br></br>\n                                            <div>s</div>\n                                            <div>t</div>\n                                            <div>r</div>\n                                            <div>i</div>\n                                            <div>n</div>\n                                            <div>g</div>\n                                            <div>.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 5</div>\n                                    <div class=\"paragraph_NI\">Let's now look at how a for loop can be used with a tuple:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>tup = (1,2,3,4,5)</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> t <div class=\"purp\">in</div> tup:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>1</div>\n                                            <div>2</div>\n                                            <div>3</div>\n                                            <div>4</div>\n                                            <div>5</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"tab_header\">Example 6</div>\n                                    <div class=\"paragraph\">Tuples have a special quality when it comes to for loops. If you are iterating through a sequence that contains tuples, the item can actually be the tuple itself, this is an example of tuple unpacking. During the for loop we will be unpacking the tuple inside of a sequence and we can access the individual items inside that tuple!</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> tup <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>(2,4)</div>\n                                            <div>(6,8)</div>\n                                            <div>(10,12)</div>\n                                        </div>\n                                        <div class=\"input\">\n                                            <div class=\"comment\"># Now with unpacking!</div>\n                                            <div>list2 = [(2,4),(6,8),(10,12)]</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> (t1,t2) <div class=\"purp\">in</div> list2:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(t1)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>2</div>\n                                            <div>6</div>\n                                            <div>10</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">With tuples in a sequence we can access the items inside of them through unpacking. The reason this is important is because many objects will deliver their iterables through tuples. We’ll now explore iterating through Dictionaries.</div>\n                                    <div class=\"tab_header\">Example 7</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> item <div class=\"purp\">in</div> d:</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(item)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>k2</div>\n                                            <div>k3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph multi\">Notice how this produces only the keys. So how can we get the values, or both the keys and the values? We're going to introduce three new Dictionary methods: <div class=\"bold\">.keys()</div>, <div class=\"bold\">.values()</div> and <div class=\"bold\">.items()</div></div>\n                                    <div class=\"paragraph\">In Python each of these methods return a dictionary view object. It supports operations like membership test and iteration, but its contents are not independent of the original dictionary – it is only a view. Let's see it in action:</div>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>{`d = {'k1':1,'k2':2,'k3':3}`}</div>\n                                            <div class=\"comment\"># Create a dictionary view object</div>\n                                            <div>d.items()</div>\n                                            <div>dict_items([('k1', 1), ('k2', 2), ('k3', 3)])</div>\n                                            <div class=\"comment\">'''Since the .items() method supports iteration, we can perform dictionary unpacking to separate keys and values just as we did in the previous examples.'''</div>\n                                            <div class=\"comment\"># Dictionary unpacking</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> k,v <div class=\"purp\">in</div> d.items():</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(k)</div>\n                                            <div class=\"multi in_1\"><div class=\"yel\">print</div>(v)</div>\n                                        </div>\n                                        <div class=\"output\">\n                                            <div>k1</div>\n                                            <div>1</div>\n                                            <div>k2</div>\n                                            <div>2</div>\n                                            <div>k3</div>\n                                            <div>3</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"paragraph\">If you want to obtain a true list of keys, values, or key/value tuples, you can cast the view as a list:</div>\n                                    <div class=\"paragraph\">list(d.keys())</div>\n                                    <div class=\"paragraph\">['k1', 'k2', 'k3']</div>\n                                    <div class=\"paragraph\">Remember that dictionaries are unordered, and that keys and values come back in arbitrary order. You can obtain a sorted list using sorted():</div>\n                                    <div class=\"paragraph\">sorted(d.values())</div>\n                                    <div class=\"paragraph\">[1, 2, 3]</div>\n                                    <div class=\"tab_header\">Conclusion</div>\n                                    <div class=\"paragraph\">We've learned how to use for loops to iterate through tuples, lists, strings, and dictionaries. It will be an important tool for us, so make sure you know it well and understand the above examples.</div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <div class = \"code_block\">\n                                        <div class=\"input\">\n                                            <div>var = 10</div>\n                                            <div class=\"multi\"><div class=\"purp\">for</div> i <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(10):</div>\n                                            <div class=\"in_1 multi\"><div class=\"purp\">for</div> j <div class=\"purp\">in</div> <div class=\"yel\"> range</div>(2, 10, 1):</div>\n                                            <div class=\"in_2 multi\"><div class=\"purp\">if</div> var % 2 == 0:</div>\n                                            <div class=\"in_3\"><div class=\"purp\">continue</div>(num)</div>\n                                            <div class=\"in_3\">var += 1</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"purp\">else:</div>\n                                            <div class=\"in_1\">var += 1</div>\n                                            <div class=\"multi\"><div class=\"yel\">print</div>('var')</div>\n                                        </div>\n                                    </div>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"What is the value of the var after the for loop completes its execution?\",\n                                              FindAnswer:[\"20\", \"21\", \"10\", \"30\"], \n                                              rightAnswer:\"21\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which is true about a for loop?\",\n                                                FindAnswer:[\"Python’s for loop used to iterates over the items of list, tuple, dictionary, set, or string\", \"We use for loop when we want to perform a task indefinitely until a particular condition is met\", \"else clause of for loop is executed when the loop terminates naturally\", \"else clause of for loop is executed when the loop terminates abruptly\"], \n                                                rightAnswer:\"else clause of for loop is executed when the loop terminates naturally\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Which two statements are used to implement iteration?\",\n                                                FindAnswer:[ \"FOR and WHILE\", \"IF and ELSE\", \"IF and WHILE\", \"ELSE and WHILE\"], \n                                                rightAnswer:\"IF and ELSE\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <div class = \"tab_header\">Task</div>\n                                    <div class = \"paragraph_NI\">Create a for loop that takes the first and second letter of a word and replaces them with the number 3.</div>\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Demo?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit14Lesson5;","import React, { Fragment } from 'react';\nimport Header from '../../components/Header.js';\nimport '../../components/styles/Demo.css';\nimport Tabs from '../../tabs/Tabs.js';\nimport {Link} from 'react-router-dom';\nimport Fade from 'react-reveal/Fade';\nimport Quiz from '../../components/quiz/Quiz.js';\n\nclass Unit15Lesson1 extends React.Component {\n    render() {\n        return (\n            <div class = \"container\">\n                \n                <div class = \"navbar\">\n                    <Header />\n                </div>\n\n                <div class = \"split left\">\n                    <div class = \"lesson_video\">\n                        <iframe src=\"https://www.youtube.com/embed/hDpmCXihL3s?rel=0\" title=\"Video\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"true\"></iframe>\n                    </div> \n                </div>\n                <div class = \"split right\">\n                    <div class = \"lesson_content\">\n                        <div class = \"lesson_title grow\">01 Functions</div>\n                        <div class = \"tabs\">\n                            <Tabs>\n                                <div class=\"tab_label\" label=\"Supplemental\">\n                                    <div class=\"tab_header\">Introduction to Functions</div>\n                                    <div class=\"paragraph\">This lecture will consist of explaining what a function is in Python and how to create one. Functions will be one of our main building blocks when we construct larger and larger amounts of code to solve problems.</div>\n                                    <div class=\"tab_header\">What is a function?</div>\n                                    <div class=\"paragraph\">Formally, a function is a useful device that groups together a set of statements capable of running more than once. They can also let us specify parameters that can serve as inputs to the functions.</div>\n                                    <div class=\"paragraph\">On a more basic level, functions allow us to not have to repeatedly write the same code repeatedly. If you remember back to the lessons on strings and lists, we used a function len() to get the length of a string. Since checking the length of a sequence is a common task, you would want to write a function that can do this repeatedly at command.</div>\n                                    <div class=\"paragraph\">Functions will be a key aspect in reusing code and will allow us to think of program design (which we will learn about through Object Oriented Programming).</div>\n                                    <div class=\"tab_header\">Why use functions?</div>\n                                    <div class=\"paragraph\">Put simply, you should use functions when you plan on using a block of code multiple times. The function will allow you to call the same block of code without having to write it multiple times. This in turn will allow you to create more complex Python scripts.</div>\n                                    <div class=\"tab_header\">Function Topics</div>\n                                    <div class=\"list\">\n                                        <ul>\n                                            <li>Def keyword</li>\n                                            <li>Simple example of a function</li>\n                                            <li>Calling a function with ()</li>\n                                            <li>Accepting parameters</li>\n                                            <li>Print versus return</li>\n                                            <li>Adding in logic inside a function</li>\n                                            <li>Multiple returns inside a function</li>\n                                            <li>Adding in loops inside a function</li>\n                                            <li>Tuple unpacking</li>\n                                            <li>Interactions between functions</li>\n                                        </ul>\n                                    </div>\n                                    <div class=\"tab_header\">def keyword</div>\n                                    <div class=\"paragraph_NI\">A function's syntax in Python has the following form:</div>\n                                    <div class = \"code_block\">\n                                        <div>def name_of_function(arg1,arg2):</div>\n                                        <div class = \"comment\">'''This is where the function's Document String (docstring) goes.\n                                        When you call help() on your function it will be printed out.'''</div>\n                                        <div># Do stuff here</div>\n                                        <div># Return desired result</div>\n                                    </div>\n                                </div>\n                                <div class=\"tab_label\" label=\"Quiz\">\n                                <Fragment>\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                              question: \"When ReactJS released?\",\n                                              FindAnswer:[\"JUN 2015\", \"March 2014\", \"March 2013\", \"bruh\"], \n                                              rightAnswer:\"March 2013\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"In which lifecycle event do you make AJAX requests and why?\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                    <Quiz \n                                        quizdata={\n                                            {\n                                                question: \"Moke\",\n                                                FindAnswer:[ \"componentWillMount\", \"componentDidMount\", \"use function\", \"bruh\"], \n                                                rightAnswer:\"componentDidMount\"\n                                            }\n                                        }\n                                    />\n                                </Fragment> \n                                </div>\n                                <div class=\"tab_label\" label=\"Assignment\">\n                                    <iframe height=\"400px\" width=\"100%\" src=\"https://repl.it/@SursumEducation/Set2Lesson2Repl1?lite=true\" title=\"Code\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n                                </div>\n                            </Tabs>\n                        </div>\n                    </div>\n                </div>\n\n                <div class = \"bottom_section\">\n                    <Fade bottom><div><div class =\"lesson_backbutton\"><Link to='/Units'><button class=\"grow\">View Other Lessons</button></Link></div></div></Fade>\n                </div> \n\n            </div>\n        )\n      }\n}\n\nexport default Unit15Lesson1;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Footer from './components/Footer.js';\n\nimport Home from './components/Home.js';\nimport About from './components/About.js';\nimport Contact from './components/Contact.js';\nimport Demo from './components/Demo.js';\nimport Units from './components/Units.js';\nimport Unit1Lesson1 from './courses/Unit1/Unit1Lesson1.js';\nimport Unit1Lesson2 from './courses/Unit1/Unit1Lesson2.js';\n\nimport Unit2Lesson1 from './courses/Unit2/Unit2Lesson1.js';\nimport Unit2Lesson2 from './courses/Unit2/Unit2Lesson2.js';\nimport Unit2Lesson3 from './courses/Unit2/Unit2Lesson3.js';\nimport Unit2Lesson4 from './courses/Unit2/Unit2Lesson4.js';\nimport Unit2Lesson5 from './courses/Unit2/Unit2Lesson5.js';\nimport Unit2Lesson6 from './courses/Unit2/Unit2Lesson6.js';\nimport Unit2Lesson7 from './courses/Unit2/Unit2Lesson7.js';\nimport Unit2Lesson8 from './courses/Unit2/Unit2Lesson8.js';\nimport Unit2Lesson9 from './courses/Unit2/Unit2Lesson9.js';\nimport Unit2Lesson10 from './courses/Unit2/Unit2Lesson10.js';\nimport Unit2Lesson11 from './courses/Unit2/Unit2Lesson11.js';\nimport Unit2Lesson12 from './courses/Unit2/Unit2Lesson12.js';\n\nimport Unit3Lesson1 from './courses/Unit3/Unit3Lesson1.js';\nimport Unit3Lesson2 from './courses/Unit3/Unit3Lesson2.js';\n\nimport Unit4Lesson1 from './courses/Unit4/Unit4Lesson1.js';\nimport Unit4Lesson2 from './courses/Unit4/Unit4Lesson2.js';\nimport Unit4Lesson3 from './courses/Unit4/Unit4Lesson3.js';\nimport Unit4Lesson4 from './courses/Unit4/Unit4Lesson4.js';\nimport Unit4Lesson5 from './courses/Unit4/Unit4Lesson5.js';\n\nimport Unit5Lesson1 from './courses/Unit5/Unit5Lesson1.js';\nimport Unit5Lesson2 from './courses/Unit5/Unit5Lesson2.js';\nimport Unit5Lesson3 from './courses/Unit5/Unit5Lesson3.js';\nimport Unit5Lesson4 from './courses/Unit5/Unit5Lesson4.js';\nimport Unit5Lesson5 from './courses/Unit5/Unit5Lesson5.js';\nimport Unit5Lesson6 from './courses/Unit5/Unit5Lesson6.js';\nimport Unit5Lesson7 from './courses/Unit5/Unit5Lesson7.js';\nimport Unit5Lesson8 from './courses/Unit5/Unit5Lesson8.js';\nimport Unit5Lesson9 from './courses/Unit5/Unit5Lesson9.js';\n\nimport Unit6Lesson1 from './courses/Unit6/Unit6Lesson1.js';\nimport Unit6Lesson2 from './courses/Unit6/Unit6Lesson2.js';\nimport Unit6Lesson3 from './courses/Unit6/Unit6Lesson3.js';\nimport Unit6Lesson4 from './courses/Unit6/Unit6Lesson4.js';\nimport Unit6Lesson5 from './courses/Unit6/Unit6Lesson5.js';\n\nimport Unit7Lesson1 from './courses/Unit7/Unit7Lesson1.js';\nimport Unit7Lesson2 from './courses/Unit7/Unit7Lesson2.js';\nimport Unit7Lesson3 from './courses/Unit7/Unit7Lesson3.js';\n\nimport Unit8Lesson1 from './courses/Unit8/Unit8Lesson1.js';\nimport Unit8Lesson2 from './courses/Unit8/Unit8Lesson2.js';\nimport Unit8Lesson3 from './courses/Unit8/Unit8Lesson3.js';\nimport Unit8Lesson4 from './courses/Unit8/Unit8Lesson4.js';\nimport Unit8Lesson5 from './courses/Unit8/Unit8Lesson5.js';\nimport Unit8Lesson6 from './courses/Unit8/Unit8Lesson6.js';\nimport Unit8Lesson7 from './courses/Unit8/Unit8Lesson7.js';\nimport Unit8Lesson8 from './courses/Unit8/Unit8Lesson8.js';\n\nimport Unit9Lesson1 from './courses/Unit9/Unit9Lesson1.js';\n\nimport Unit10Lesson1 from './courses/Unit10/Unit10Lesson1.js';\n\nimport Unit11Lesson1 from './courses/Unit11/Unit11Lesson1.js';\nimport Unit11Lesson2 from './courses/Unit11/Unit11Lesson2.js';\nimport Unit11Lesson3 from './courses/Unit11/Unit11Lesson3.js';\nimport Unit11Lesson4 from './courses/Unit11/Unit11Lesson4.js';\nimport Unit11Lesson5 from './courses/Unit11/Unit11Lesson5.js';\n\nimport Unit12Lesson1 from './courses/Unit12/Unit12Lesson1.js';\nimport Unit12Lesson2 from './courses/Unit12/Unit12Lesson2.js';\n\nimport Unit13Lesson1 from './courses/Unit13/Unit13Lesson1.js';\nimport Unit13Lesson2 from './courses/Unit13/Unit13Lesson2.js';\n\nimport Unit14Lesson1 from './courses/Unit14/Unit14Lesson1.js';\nimport Unit14Lesson2 from './courses/Unit14/Unit14Lesson2.js';\nimport Unit14Lesson3 from './courses/Unit14/Unit14Lesson3.js';\nimport Unit14Lesson4 from './courses/Unit14/Unit14Lesson4.js';\nimport Unit14Lesson5 from './courses/Unit14/Unit14Lesson5.js';\n\nimport Unit15Lesson1 from './courses/Unit15/Unit15Lesson1.js';\n\nconst routes = [\n  { path: '/',\n    exact: true,\n    main: () => <Home />\n  },\n  { path: '/About',\n    main: () => <About />\n  },\n  { path: '/Contact',\n    main: () => <Contact />\n  },\n  { path: '/Demo',\n    main: () => <Demo />\n  },\n  { path: '/Units',\n    main: () => <Units />\n  },\n  { path: '/Unit1Lesson1',\n    main: () => <Unit1Lesson1 />\n  },\n  { path: '/Unit1Lesson2',\n    main: () => <Unit1Lesson2 />\n  },\n  { path: '/Unit2Lesson1',\n    main: () => <Unit2Lesson1 />\n  },\n  { path: '/Unit2Lesson2',\n    main: () => <Unit2Lesson2 />\n  },\n  { path: '/Unit2Lesson3',\n    main: () => <Unit2Lesson3 />\n  },\n  { path: '/Unit2Lesson4',\n    main: () => <Unit2Lesson4 />\n  },\n  { path: '/Unit2Lesson5',\n    main: () => <Unit2Lesson5 />\n  },\n  { path: '/Unit2Lesson6',\n    main: () => <Unit2Lesson6 />\n  },\n  { path: '/Unit2Lesson7',\n    main: () => <Unit2Lesson7 />\n  },\n  { path: '/Unit2Lesson8',\n    main: () => <Unit2Lesson8 />\n  },\n  { path: '/Unit2Lesson9',\n    main: () => <Unit2Lesson9 />\n  },\n  { path: '/Unit2Lesson10',\n    main: () => <Unit2Lesson10 />\n  },\n  { path: '/Unit2Lesson11',\n    main: () => <Unit2Lesson11 />\n  },\n  { path: '/Unit2Lesson12',\n    main: () => <Unit2Lesson12 />\n  },\n  { path: '/Unit3Lesson1',\n    main: () => <Unit3Lesson1 />\n  },\n  { path: '/Unit3Lesson2',\n    main: () => <Unit3Lesson2 />\n  },\n  { path: '/Unit4Lesson1',\n    main: () => <Unit4Lesson1 />\n  },\n  { path: '/Unit4Lesson2',\n    main: () => <Unit4Lesson2 />\n  },\n  { path: '/Unit4Lesson3',\n    main: () => <Unit4Lesson3 />\n  },\n  { path: '/Unit4Lesson4',\n    main: () => <Unit4Lesson4 />\n  },\n  { path: '/Unit4Lesson5',\n    main: () => <Unit4Lesson5 />\n  },\n  { path: '/Unit5Lesson1',\n    main: () => <Unit5Lesson1 />\n  },\n  { path: '/Unit5Lesson2',\n    main: () => <Unit5Lesson2 />\n  },\n  { path: '/Unit5Lesson3',\n    main: () => <Unit5Lesson3 />\n  },\n  { path: '/Unit5Lesson4',\n    main: () => <Unit5Lesson4 />\n  },\n  { path: '/Unit5Lesson5',\n    main: () => <Unit5Lesson5 />\n  },\n  { path: '/Unit5Lesson6',\n    main: () => <Unit5Lesson6 />\n  },\n  { path: '/Unit5Lesson7',\n    main: () => <Unit5Lesson7 />\n  },\n  { path: '/Unit5Lesson8',\n    main: () => <Unit5Lesson8 />\n  },\n  { path: '/Unit5Lesson9',\n    main: () => <Unit5Lesson9 />\n  },\n  { path: '/Unit6Lesson1',\n    main: () => <Unit6Lesson1 />\n  },\n  { path: '/Unit6Lesson2',\n    main: () => <Unit6Lesson2 />\n  },\n  { path: '/Unit6Lesson3',\n    main: () => <Unit6Lesson3 />\n  },\n  { path: '/Unit6Lesson4',\n    main: () => <Unit6Lesson4 />\n  },\n  { path: '/Unit6Lesson5',\n    main: () => <Unit6Lesson5 />\n  },\n  { path: '/Unit7Lesson1',\n    main: () => <Unit7Lesson1 />\n  },\n  { path: '/Unit7Lesson2',\n   main: () => <Unit7Lesson2 />\n  },\n  { path: '/Unit7Lesson3',\n   main: () => <Unit7Lesson3 />\n  },\n  { path: '/Unit8Lesson1',\n    main: () => <Unit8Lesson1 />\n  },\n  { path: '/Unit8Lesson2',\n    main: () => <Unit8Lesson2 />\n  },\n  { path: '/Unit8Lesson3',\n    main: () => <Unit8Lesson3 />\n  },\n  { path: '/Unit8Lesson4',\n    main: () => <Unit8Lesson4 />\n  },\n  { path: '/Unit8Lesson5',\n    main: () => <Unit8Lesson5 />\n  },\n  { path: '/Unit8Lesson6',\n    main: () => <Unit8Lesson6 />\n  },\n  { path: '/Unit8Lesson7',\n    main: () => <Unit8Lesson7 />\n  },\n  { path: '/Unit8Lesson8',\n    main: () => <Unit8Lesson8 />\n  },\n  { path: '/Unit9Lesson1',\n    main: () => <Unit9Lesson1 />\n  },\n  { path: '/Unit10Lesson1',\n    main: () => <Unit10Lesson1 />\n  },\n  { path: '/Unit11Lesson1',\n    main: () => <Unit11Lesson1 />\n  },\n  { path: '/Unit11Lesson2',\n    main: () => <Unit11Lesson2 />\n  },\n  { path: '/Unit11Lesson3',\n    main: () => <Unit11Lesson3 />\n  },\n  { path: '/Unit11Lesson4',\n    main: () => <Unit11Lesson4 />\n  },\n  { path: '/Unit11Lesson5',\n    main: () => <Unit11Lesson5 />\n  },\n  { path: '/Unit12Lesson1',\n    main: () => <Unit12Lesson1 />\n  },\n  { path: '/Unit12Lesson2',\n    main: () => <Unit12Lesson2 />\n  },\n  { path: '/Unit13Lesson1',\n    main: () => <Unit13Lesson1 />\n  },\n  { path: '/Unit13Lesson2',\n    main: () => <Unit13Lesson2 />\n  },\n  { path: '/Unit14Lesson1',\n    main: () => <Unit14Lesson1 />\n  },\n  { path: '/Unit14Lesson2',\n    main: () => <Unit14Lesson2 />\n  },\n  { path: '/Unit14Lesson3',\n    main: () => <Unit14Lesson3 />\n  },\n  { path: '/Unit14Lesson4',\n    main: () => <Unit14Lesson4 />\n  },\n  { path: '/Unit14Lesson5',\n    main: () => <Unit14Lesson5 />\n  },\n  { path: '/Unit15Lesson1',\n    main: () => <Unit15Lesson1 />\n  },\n]\n\nclass WebPage extends React.Component {\n    render() {\n        return (\n          <Router>\n            <div class='main'>\n                    \n                {routes.map((route) => (\n                    <Route\n                    key={route.path}\n                    path={route.path}\n                    exact={route.exact}\n                    component={route.main}\n                    />\n                ))}\n\n                <Footer />\n\n            </div>\n          </Router>\n        )\n      }\n}\n\nexport default WebPage;","import React from 'react';\nimport './App.css';\nimport WebPage from './Main.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WebPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}